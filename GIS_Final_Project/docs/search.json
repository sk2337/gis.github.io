[
  {
    "objectID": "state_level1.html",
    "href": "state_level1.html",
    "title": "Analysis of State-Level Happiness and Population Density in the United States",
    "section": "",
    "text": "After taking a look at the happiness scores by each country and what factors are influencial in determining people’s happiness, I wanted to examine the relationship between happiness scores and population density across U.S. states to get an idea of whether the same factors that influenced the happiness scores have the same impact on state-level or not. Also, analyses of the relationship between the happiness score and its factors didn’t seem to give accurate results, especially for the coastal/non-coastal area where most countries were categorized as ‘coastal’, so I decided to go into more detail and analyzed the relationship by narrowing the scope.\nFor this section, I started analyzing the data by categorizing states based on population density and analyzing happiness scores.\n\n\nCode\n# Load libraries\nlibrary(tidyverse)\nlibrary(sf)\nlibrary(spdep)\nlibrary(viridis)\nlibrary(readxl)\nlibrary(rnaturalearth)\nlibrary(rnaturalearthdata)\nlibrary(corrplot)\n\n\n\n\nCode\n# Load spatial and happiness datasets\nus_states &lt;- ne_states(country = \"United States of America\", returnclass = \"sf\")\nhappiness_state &lt;- read_csv(\"../data/happiest-states-2024.csv\", show_col_types = FALSE)\n\n\n\n\nCode\n# Merge spatial and happiness data\nmerged_sf &lt;- left_join(us_states, happiness_state, by = c(\"name\" = \"state\"))\nmerged_sf &lt;- merged_sf[!is.na(merged_sf$HappiestStatesTotalHappinessScore), ] # Remove rows with missing happiness scores\n\n\n\n\nCode\nmerged_sf &lt;- st_transform(merged_sf, crs = 3857)\n\n\n\n\nCode\ncountry_area &lt;- read_csv(\"../data/united-states-by-density-2024.csv\", show_col_types = FALSE)\n\n\n\n\nCode\nmerged_sf &lt;- left_join(merged_sf, country_area, by = c(\"name\" = \"state\"))\n\n\n\n\nCode\n# Categorize countries by population density\nmerged_sf$pop_density_category &lt;- cut(\n  merged_sf$densityMi,\n  breaks = quantile(merged_sf$densityMi, probs = seq(0, 1, by = 0.25), na.rm = TRUE),\n  labels = c(\"Low\", \"Medium\", \"High\", \"Very High\"),\n  include.lowest = TRUE\n)\n\n# Visualize happiness by population density\nggplot(merged_sf) +\n  geom_sf(aes(fill = HappiestStatesTotalHappinessScore), color = \"white\") +\n  facet_wrap(~pop_density_category) +\n  scale_fill_viridis_c(option = \"B\") +\n  theme_minimal() +\n  labs(title = \"Happiness Scores by Population Density\", fill = \"Happiness Score\")\n\n\n\n\n\nI used the happiness data that has the happiness scores of people in each state, measured in 2024, and merged it with the population density data that has the density for each state. Then, I categorized the population density into four parts, low, medium, high, very high density, so that I could get a better understanding of whether population densities influence people’s happiness and see whether a low or high density affects people’s sentiment.\n\nExploratory Insights\nFrom this scatterplot, it revealed that there isn’t a clear linear relationship between population density and happiness scores. While some low-density states exhibit high happiness, other density categories display mixed results, suggesting additional factors influencing well-being.\nLow-density states tend to have more consistent happiness scores, potentially due to lifestyle factors like reduced congestion and access to nature. Medium-density states show more variability, reflecting diverse urban and suburban environments.\n\n\nSpatial Autocorrelation Analysis\nTo look into closer of whether the scatterplot showed the correct result, I used Moran’s I to test the following hypothesis:\nH0: Happiness levels are not determined by the neighboring states. Ha: Happiness levels are determined by the neighboring states.\n\n\nCode\nmerged_sf &lt;- merged_sf[!is.na(merged_sf$`pop_density_category`), ] # Remove rows with missing happiness scores\n\n\n\n\nCode\n# Subset coastal and landlocked countries\nlow_den_countries &lt;- merged_sf[merged_sf$pop_density_category == \"Low\", ]\nmod_den_countries &lt;- merged_sf[merged_sf$pop_density_category == \"Medium\", ]\nhigh_den_countries &lt;- merged_sf[merged_sf$pop_density_category == \"High\", ]\nvery_high_den_countries &lt;- merged_sf[merged_sf$pop_density_category == \"Very High\", ]\n\n# Create spatial weights for Low Freedom countries\nlow_den_coords &lt;- st_coordinates(st_centroid(low_den_countries))\nlow_den_knn &lt;- spdep::knearneigh(low_den_coords, k = 5)\nlow_den_listw &lt;- spdep::nb2listw(spdep::knn2nb(low_den_knn), style = \"W\")\n\n# Moran's I for Low Freedom countries\nlow_den_moran &lt;- spdep::moran.test(low_den_countries$`HappiestStatesTotalHappinessScore`, low_den_listw)\nprint(low_den_moran)\n\n\n\n    Moran I test under randomisation\n\ndata:  low_den_countries$HappiestStatesTotalHappinessScore  \nweights: low_den_listw    \n\nMoran I statistic standard deviate = -0.41199, p-value = 0.6598\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n      -0.12950481       -0.08333333        0.01255955 \n\n\nCode\n# Create spatial weights for Moderate Freedom countries\nmod_den_coords &lt;- st_coordinates(st_centroid(mod_den_countries))\nmod_den_knn &lt;- spdep::knearneigh(mod_den_coords, k = 5)\nmod_den_listw &lt;- spdep::nb2listw(spdep::knn2nb(mod_den_knn), style = \"W\")\n\n# Moran's I for Moderate Freedom countries\nmod_den_moran &lt;- spdep::moran.test(mod_den_countries$`HappiestStatesTotalHappinessScore`, mod_den_listw)\nprint(mod_den_moran)\n\n\n\n    Moran I test under randomisation\n\ndata:  mod_den_countries$HappiestStatesTotalHappinessScore  \nweights: mod_den_listw    \n\nMoran I statistic standard deviate = 3.5085, p-value = 0.0002254\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n      0.246862485      -0.090909091       0.009268627 \n\n\nCode\n# Create spatial weights for High Freedom countries\nhigh_den_coords &lt;- st_coordinates(st_centroid(high_den_countries))\nhigh_den_knn &lt;- spdep::knearneigh(high_den_coords, k = 5)\nhigh_den_listw &lt;- spdep::nb2listw(spdep::knn2nb(high_den_knn), style = \"W\")\n\n# Moran's I for High Freedom countries\nhigh_den_moran &lt;- spdep::moran.test(high_den_countries$`HappiestStatesTotalHappinessScore`, high_den_listw)\nprint(high_den_moran)\n\n\n\n    Moran I test under randomisation\n\ndata:  high_den_countries$HappiestStatesTotalHappinessScore  \nweights: high_den_listw    \n\nMoran I statistic standard deviate = 0.29169, p-value = 0.3853\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n     -0.067284020      -0.090909091       0.006560212 \n\n\nCode\n# Create spatial weights for High Freedom countries\nvery_high_den_coords &lt;- st_coordinates(st_centroid(very_high_den_countries))\nvery_high_den_knn &lt;- spdep::knearneigh(very_high_den_coords, k = 5)\nvery_high_den_listw &lt;- spdep::nb2listw(spdep::knn2nb(very_high_den_knn), style = \"W\")\n\n# Moran's I for High Freedom countries\nvery_high_den_moran &lt;- spdep::moran.test(very_high_den_countries$`HappiestStatesTotalHappinessScore`, very_high_den_listw)\nprint(very_high_den_moran)\n\n\n\n    Moran I test under randomisation\n\ndata:  very_high_den_countries$HappiestStatesTotalHappinessScore  \nweights: very_high_den_listw    \n\nMoran I statistic standard deviate = -0.22418, p-value = 0.5887\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n      -0.10619418       -0.08333333        0.01039873 \n\n\nAfter calculating the Moran’s I for different population densities, it showed that for low, high, and very high density states, the p-value was more than 0.05 and didn’t reveal any significance. Yet, for the population density categorized as “medium”, the p-value was 0.0002, which showed there was significant clustering. This suggests neighboring medium-density states tend to have similar happiness scores.\n\n\nCode\n# Scatterplot of Population Density vs. Happiness Score\nggplot(merged_sf, aes(x = densityMi, y = `HappiestStatesTotalHappinessScore`)) +\n  geom_point(alpha = 0.6) +\n  geom_smooth(method = \"lm\", color = \"red\", se = TRUE) +\n  theme_minimal() +\n  labs(\n    title = \"Relationship Between Population Density and Happiness\",\n    x = \"Population Density (People per Sq Km)\",\n    y = \"Happiness Score\"\n  )\n\n\n\n\n\n\n\nPopulation Density Moran’s I\n\n\nCode\n# Compute Moran's I for Population Density\npop_density_nb &lt;- spdep::poly2nb(merged_sf, queen = TRUE)\n\n# Allow empty neighbor sets\npop_density_listw &lt;- spdep::nb2listw(pop_density_nb, style = \"W\", zero.policy = TRUE)\n\n# Compute Moran's I for Population Density\npop_density_moran &lt;- spdep::moran.test(merged_sf$densityMi, pop_density_listw, zero.policy = TRUE)\n\n# Print the Moran's I result\nprint(pop_density_moran)\n\n\n\n    Moran I test under randomisation\n\ndata:  merged_sf$densityMi  \nweights: pop_density_listw  \nn reduced by no-neighbour observations  \n\nMoran I statistic standard deviate = 5.6751, p-value = 6.929e-09\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n      0.502672670      -0.021276596       0.008523655 \n\n\nA separate Moran’s I test for population density revealed significant spatial clustering (Moran’s I = 0.50, p-value &lt; 0.001). States with similar density levels are geographically proximate, highlighting the influence of regional factors like urban planning, geography, and historical settlement patterns.\n\n\nK-Means clustering\n\n\nCode\n# Subset relevant data (e.g., happiness scores and other numeric variables)\ncluster_data &lt;- merged_sf %&gt;%\n  st_drop_geometry() %&gt;%  # Remove spatial geometry\n  select(HappiestStatesTotalHappinessScore, densityMi, HappiestStatesCommunityAndEnvironmentRank, HappiestStatesWorkEnvironmentRank) %&gt;%\n  drop_na()  # Remove rows with missing values\n\n# Standardize the data\ncluster_data_scaled &lt;- scale(cluster_data)\n\n# Determine the optimal number of clusters using the Elbow method\nset.seed(123)  # For reproducibility\nwss &lt;- map_dbl(1:10, function(k) {\n  kmeans(cluster_data_scaled, centers = k, nstart = 25)$tot.withinss\n})\n\n# Plot the Elbow method\nplot(1:10, wss, type = \"b\", pch = 19, frame = FALSE,\n     xlab = \"Number of Clusters (k)\",\n     ylab = \"Total Within-Cluster Sum of Squares\")\n\n\n\n\n\nCode\n# Perform k-means clustering with the optimal number of clusters\noptimal_k &lt;- 3  # Replace with the optimal number from the Elbow plot\nkmeans_result &lt;- kmeans(cluster_data_scaled, centers = optimal_k, nstart = 25)\n\n# Add cluster assignments to the original dataset\nmerged_sf$cluster &lt;- as.factor(kmeans_result$cluster)\n\n# Scatterplot\nggplot(merged_sf, aes(x = densityMi, y = HappiestStatesTotalHappinessScore, color = cluster)) +\n  geom_point() +\n  theme_minimal() +\n  labs(title = \"Clustering Population Density and Happiness Scores\",\n       x = \"Population Density\",\n       y = \"Happiness Score\",\n       color = \"Cluster\")\n\n\n\n\n\nCode\n# Visualize clusters on a map\nlibrary(tmap)\ntm_shape(merged_sf) +\n  tm_polygons(\"cluster\", palette = \"Set2\", title = \"Clusters\") +\n  tm_layout(title = \"K-Means Clustering Results\")\n\n\n\n\n\nThe K-means clustering analysis highlighted significant groupings of states based on happiness scores and population density. The analysis revealed that states with higher population densities tended to cluster separately from less densely populated regions, indicating potential differences in living conditions, access to resources, or societal structures. Additionally, happiness scores showed clear patterns within the clusters, with some groups exhibiting consistently high levels of happiness, while others were lower on average.\nNotably, coastal states often formed distinct clusters, possibly reflecting their access to natural resources, tourism-driven economies, or socio-cultural benefits of coastal living. In contrast, landlocked and rural states were associated with lower happiness scores and formed separate clusters, underscoring the potential impact of geographic and demographic factors on well-being. These insights suggest that regional characteristics play a vital role in shaping happiness and can inform targeted interventions to address disparities.\n\n\nFindings\n\nPopulation density does not directly correlate with happiness, but medium-density states show significant spatial clustering, suggesting some geographic influence on well-being.\nPolicymakers should consider regional trends and unique state characteristics when addressing well-being. Medium-density states could benefit from targeted initiatives to enhance happiness, while high-density states may require diverse strategies to address urban challenges."
  },
  {
    "objectID": "state_level2.html",
    "href": "state_level2.html",
    "title": "Coastal vs. Landlocked Happiness Analysis for U.S. States",
    "section": "",
    "text": "For this section, I tried to look for the relationship between geographic location (coastal or landlocked) and state-level happiness scores in the United States, like I did for analyzing the countries.\n\n\nCode\n# Load libraries\nlibrary(tidyverse)\nlibrary(sf)\nlibrary(spdep)\nlibrary(viridis)\nlibrary(readxl)\nlibrary(rnaturalearth)\nlibrary(rnaturalearthdata)\nlibrary(corrplot)\n\n\n\n\nCode\n# Load spatial and happiness datasets\nus_states &lt;- ne_states(country = \"United States of America\", returnclass = \"sf\")\nhappiness_state &lt;- read_csv(\"../data/happiest-states-2024.csv\", show_col_types = FALSE)\n\n\n\n\nCode\n# Merge spatial and happiness data\nmerged_sf &lt;- left_join(us_states, happiness_state, by = c(\"name\" = \"state\"))\nmerged_sf &lt;- merged_sf[!is.na(merged_sf$`HappiestStatesTotalHappinessScore`), ] # Remove rows with missing happiness scores\n\n\n\n\nCode\nmerged_sf &lt;- st_transform(merged_sf, crs = 3857)\n\n\n\n\nCode\n# Load coastline data\ncoastline &lt;- ne_download(scale = \"medium\", type = \"coastline\", category = \"physical\", returnclass = \"sf\")\n\n\nReading layer `ne_50m_coastline' from data source \n  `/private/var/folders/jb/_57y0k0x0wj5rxjpxc000yxc0000gn/T/RtmpvR3Vo9/ne_50m_coastline.shp' \n  using driver `ESRI Shapefile'\nSimple feature collection with 1428 features and 3 fields\nGeometry type: MULTILINESTRING\nDimension:     XY\nBounding box:  xmin: -180 ymin: -85.19219 xmax: 180 ymax: 83.59961\nGeodetic CRS:  WGS 84\n\n\nCode\n# Combine coastlines into a single geometry\ncoastline_union &lt;- st_union(coastline)\n\n\n\n\nCode\n# Ensure merged_sf and coastline_union have the same CRS\nif (st_crs(merged_sf) != st_crs(coastline_union)) {\n  coastline_union &lt;- st_transform(coastline_union, st_crs(merged_sf))\n}\n\n\n\n\nCode\n# Categorize countries as coastal or landlocked\nmerged_sf$coastal &lt;- ifelse(\n  lengths(st_is_within_distance(merged_sf$geometry, coastline_union, dist = 5 * 1000)) &gt; 0,\n  \"Coastal\",\n  \"Landlocked\"\n)\n\n\n\n\nCode\n# Compute summary statistics\ncoastal_stats &lt;- merged_sf %&gt;%\n  group_by(coastal) %&gt;%\n  summarize(avg_happiness = mean(HappiestStatesTotalHappinessScore, na.rm = TRUE))\n\nprint(coastal_stats)\n\n\nSimple feature collection with 2 features and 2 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -19942160 ymin: 2143886 xmax: 20013120 ymax: 11544810\nProjected CRS: WGS 84 / Pseudo-Mercator\n# A tibble: 2 × 3\n  coastal    avg_happiness                                              geometry\n  &lt;chr&gt;              &lt;dbl&gt;                                    &lt;MULTIPOLYGON [m]&gt;\n1 Coastal             53.0 (((-18701660 2877762, -18701180 2877177, -18701125 2…\n2 Landlocked          50.1 (((-12046452 3732332, -12046452 3731412, -12046452 3…\n\n\nStates are classified as Coastal or Landlocked based on their proximity to coastlines (within 5 km). Summary statistics reveal that coastal states have slightly higher average happiness scores (53.0) compared to landlocked states (50.1). This difference suggests that geographic features like access to coastal resources or tourism might influence well-being.\n\nExploratory Visualizations\n\n\nCode\n# Visualize happiness scores for coastal vs. landlocked\nggplot(merged_sf) +\n  geom_sf(aes(fill = HappiestStatesTotalHappinessScore), color = \"white\") +\n  facet_wrap(~coastal) +\n  scale_fill_viridis_c(option = \"C\") +\n  theme_minimal() +\n  labs(title = \"Happiness Scores: Coastal vs Landlocked\", fill = \"Happiness Score\")\n\n\n\n\n\nAs we found in the summary statistics, this map shows the happiness scores for coastal and landlocked states. Coastal regions generally show higher scores, particularly in states along the East and West Coasts, possibly due to economic opportunities, cultural amenities, or environmental benefits.\n\n\nSpatial Autocorrelation Analysis\n\n\nCode\n# Subset coastal and landlocked countries\ncoastal_countries &lt;- merged_sf[merged_sf$coastal == \"Coastal\", ]\nlandlocked_countries &lt;- merged_sf[merged_sf$coastal == \"Landlocked\", ]\n\n# Create spatial weights for coastal countries\ncoastal_coords &lt;- st_coordinates(st_centroid(coastal_countries))\ncoastal_knn &lt;- spdep::knearneigh(coastal_coords, k = 5)\ncoastal_listw &lt;- spdep::nb2listw(spdep::knn2nb(coastal_knn), style = \"W\")\n\n# Moran's I for coastal countries\ncoastal_moran &lt;- spdep::moran.test(coastal_countries$HappiestStatesTotalHappinessScore, coastal_listw)\nprint(coastal_moran)\n\n\n\n    Moran I test under randomisation\n\ndata:  coastal_countries$HappiestStatesTotalHappinessScore  \nweights: coastal_listw    \n\nMoran I statistic standard deviate = 2.6512, p-value = 0.00401\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n      0.221287126      -0.043478261       0.009972959 \n\n\nCode\n# Create spatial weights for landlocked countries\nlandlocked_coords &lt;- st_coordinates(st_centroid(landlocked_countries))\nlandlocked_knn &lt;- spdep::knearneigh(landlocked_coords, k = 5)\nlandlocked_listw &lt;- spdep::nb2listw(spdep::knn2nb(landlocked_knn), style = \"W\")\n\n# Moran's I for landlocked countries\nlandlocked_moran &lt;- spdep::moran.test(landlocked_countries$HappiestStatesTotalHappinessScore, landlocked_listw)\nprint(landlocked_moran)\n\n\n\n    Moran I test under randomisation\n\ndata:  landlocked_countries$HappiestStatesTotalHappinessScore  \nweights: landlocked_listw    \n\nMoran I statistic standard deviate = 3.6343, p-value = 0.0001393\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n       0.33191724       -0.04000000        0.01047228 \n\n\n\n\nCode\n# Monte Carlo simulation for coastal countries\ncoastal_mc &lt;- spdep::moran.mc(coastal_countries$HappiestStatesTotalHappinessScore, coastal_listw, nsim = 999)\nplot(coastal_mc, main = \"Monte Carlo for Coastal Countries\")\n\n\n\n\n\nCode\nprint(coastal_mc)\n\n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  coastal_countries$HappiestStatesTotalHappinessScore \nweights: coastal_listw  \nnumber of simulations + 1: 1000 \n\nstatistic = 0.22129, observed rank = 983, p-value = 0.017\nalternative hypothesis: greater\n\n\nCode\n# Monte Carlo simulation for landlocked countries\nlandlocked_mc &lt;- spdep::moran.mc(landlocked_countries$HappiestStatesTotalHappinessScore, landlocked_listw, nsim = 999)\nplot(landlocked_mc, main = \"Monte Carlo for Landlocked Countries\")\n\n\n\n\n\nCode\nprint(landlocked_mc)\n\n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  landlocked_countries$HappiestStatesTotalHappinessScore \nweights: landlocked_listw  \nnumber of simulations + 1: 1000 \n\nstatistic = 0.33192, observed rank = 998, p-value = 0.002\nalternative hypothesis: greater\n\n\nMoran’s I analysis showed strong spatial autocorrelation for both groups, with landlocked countries exhibiting a higher Moran’s I value (0.332) compared to coastal countries (0.221). This indicates tighter clustering of happiness scores among landlocked countries, where neighboring regions often share similar happiness levels, unlike the result we found from the country-level data. Maybe as we supposed in the country-level data analysis, as there were too many countries that were classified as ‘coastal’, this might have led to a misinterpretation, or there are more other features contributing to the happiness scores for landlocked states in the United States. The Monte Carlo simulations confirmed the significance of these findings (p-value &lt; 0.05), suggesting geography influences happiness distribution.\n\n\nCode\n# Convert political_freedom_category to numeric\nmerged_sf$coastal_numeric &lt;- as.numeric(as.factor(merged_sf$coastal))\n\n# Compute Moran's I for Political Freedom\ncoastal_countries_nb &lt;- spdep::poly2nb(merged_sf, queen = TRUE)\n\n# Allow empty neighbor sets\ncoastal_countries_listw &lt;- spdep::nb2listw(coastal_countries_nb, style = \"W\", zero.policy = TRUE)\n\n# Compute Moran's I for the numeric version of political freedom\ncoastal_countries_moran &lt;- spdep::moran.test(merged_sf$coastal_numeric, coastal_countries_listw, zero.policy = TRUE)\n\n# Print the Moran's I result\nprint(coastal_countries_moran)\n\n\n\n    Moran I test under randomisation\n\ndata:  merged_sf$coastal_numeric  \nweights: coastal_countries_listw  \nn reduced by no-neighbour observations  \n\nMoran I statistic standard deviate = 5.6474, p-value = 8.143e-09\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n       0.54422772       -0.02127660        0.01002697 \n\n\nAlso, the positive and significant Moran’s I value, 0.544, indicates spatial clustering of the coastal classification. This means that geographically proximate states tend to share similar geographic features (e.g., clusters of coastal states along the Atlantic or Pacific). This clustering underscores the geographic organization of U.S. states, with neighboring regions often sharing similar proximity to coastlines and related characteristics.\n\n\nInsights and Observations\nGeographic Influence on Happiness:\nCoastal states tend to have higher happiness scores than landlocked states. This could be attributed to factors like economic diversity, access to recreational areas, or enhanced cultural and social opportunities. Regional Clustering:\nCoastal states are spatially clustered, with higher happiness scores concentrated along the U.S. coasts. This suggests that geographic proximity plays a role in shaping shared economic, environmental, or social conditions. Policy Implications:\nPolicymakers in landlocked states could consider initiatives to improve happiness by replicating factors associated with coastal success, such as enhancing access to cultural or recreational activities."
  },
  {
    "objectID": "conclusion.html",
    "href": "conclusion.html",
    "title": "Conclusion",
    "section": "",
    "text": "Global Insights:\n\nDelivery infrastructure and quality emerge as pivotal determinants of happiness, highlighting the importance of accessibility and efficiency in resource distribution.\nCoastal states and regions with polar and temperate climates report higher happiness levels, suggesting a correlation between environmental factors and well-being.\nPopulation density exhibits a non-linear relationship with happiness, suggesting that both highly urbanized and sparsely populated regions face unique challenges in achieving well-being.\n\nState-Level Insights in the United States:\n\nLandlocked states and regions with moderate climates (subtropical) report higher happiness levels, suggesting a correlation between environmental factors and well-being.\nUrban-rural dynamics play a role, with mixed results pointing to varying challenges faced by densely populated cities and rural communities.\nLocal revenues for student activities are also an important factor, potentially influenced by socio-economic, demographic, or policy factors.\n\n\nOverall, we could see that considering geographic and infrastructural contexts in public policies to enhance societal well-being would contribute to higher happiness scores. For instance, investments in logistical networks and inclusive urban planning could address disparities arising from delivery quality and population density. Similarly, environmental strategies that account for regional differences in climate and geography could bolster happiness outcomes.\nWhile this analysis provides robust evidence of the relationship between spatial factors and happiness, it also suggests areas for future research. By integrating geospatial analytics with social science research, this project demonstrates the potential for informed, data-driven approaches to improving happiness and quality of life on a global scale."
  },
  {
    "objectID": "eda.html",
    "href": "eda.html",
    "title": "EDA for Country-Level Data",
    "section": "",
    "text": "With the dataset I had, the list of the world countries and their happiness scores, I wanted to look at what factors were the most influential in determining happiness scores. What I first did was filter out variables that had a lot of NAs.\n\n\nCode\n# Load libraries\nlibrary(tidyverse)\nlibrary(sf)\nlibrary(spdep)\nlibrary(viridis)\nlibrary(readxl)\nlibrary(rnaturalearth)\nlibrary(rnaturalearthdata)\nlibrary(corrplot)\n\n\n\n\nCode\n# Load spatial and happiness datasets\nworld_sf &lt;- rnaturalearth::ne_countries(scale = \"medium\", returnclass = \"sf\")\nhappiness_data &lt;- read_excel(\"../data/WHR20_DataForTable2.1.xls\")\n\n\n\n\nCode\n# Summary of numeric variables\nsummary(select_if(happiness_data, is.numeric))\n\n\n      year       Life Ladder    Log GDP per capita Social support  \n Min.   :2005   Min.   :2.375   Min.   : 6.457     Min.   :0.2902  \n 1st Qu.:2010   1st Qu.:4.623   1st Qu.: 8.309     1st Qu.:0.7483  \n Median :2013   Median :5.363   Median : 9.408     Median :0.8340  \n Mean   :2013   Mean   :5.446   Mean   : 9.245     Mean   :0.8111  \n 3rd Qu.:2016   3rd Qu.:6.268   3rd Qu.:10.209     3rd Qu.:0.9046  \n Max.   :2019   Max.   :8.019   Max.   :11.728     Max.   :0.9873  \n                                NA's   :29         NA's   :13      \n Healthy life expectancy at birth Freedom to make life choices\n Min.   :32.30                    Min.   :0.2575              \n 1st Qu.:58.30                    1st Qu.:0.6431              \n Median :65.10                    Median :0.7575              \n Mean   :63.17                    Mean   :0.7385              \n 3rd Qu.:68.39                    3rd Qu.:0.8524              \n Max.   :77.10                    Max.   :0.9852              \n NA's   :52                       NA's   :31                  \n   Generosity       Perceptions of corruption Positive affect \n Min.   :-0.33177   Min.   :0.0352            Min.   :0.3217  \n 1st Qu.:-0.11718   1st Qu.:0.6927            1st Qu.:0.6233  \n Median :-0.02372   Median :0.8036            Median :0.7208  \n Mean   : 0.00011   Mean   :0.7491            Mean   :0.7096  \n 3rd Qu.: 0.09115   3rd Qu.:0.8737            3rd Qu.:0.8011  \n Max.   : 0.67992   Max.   :0.9833            Max.   :0.9436  \n NA's   :83         NA's   :103               NA's   :21      \n Negative affect   Confidence in national government Democratic Quality\n Min.   :0.08343   Min.   :0.06877                   Min.   :-2.4483   \n 1st Qu.:0.20595   1st Qu.:0.33641                   1st Qu.:-0.7885   \n Median :0.25577   Median :0.46479                   Median :-0.2259   \n Mean   :0.26721   Mean   :0.48316                   Mean   :-0.1350   \n 3rd Qu.:0.31800   3rd Qu.:0.61626                   3rd Qu.: 0.6531   \n Max.   :0.70459   Max.   :0.99360                   Max.   : 1.5825   \n NA's   :15        NA's   :191                       NA's   :149       \n Delivery Quality   Standard deviation of ladder by country-year\n Min.   :-2.14497   Min.   :0.863                               \n 1st Qu.:-0.71114   1st Qu.:1.747                               \n Median :-0.21663   Median :1.987                               \n Mean   :-0.00209   Mean   :2.052                               \n 3rd Qu.: 0.69965   3rd Qu.:2.280                               \n Max.   : 2.18472   Max.   :4.073                               \n NA's   :148                                                    \n Standard deviation/Mean of ladder by country-year\n Min.   :0.1339                                   \n 1st Qu.:0.3107                                   \n Median :0.3756                                   \n Mean   :0.3970                                   \n 3rd Qu.:0.4632                                   \n Max.   :1.0228                                   \n                                                  \n GINI index (World Bank estimate)\n Min.   :0.240                   \n 1st Qu.:0.309                   \n Median :0.355                   \n Mean   :0.372                   \n 3rd Qu.:0.430                   \n Max.   :0.634                   \n NA's   :1133                    \n GINI index (World Bank estimate), average 2000-2017, unbalanced panel\n Min.   :0.2495                                                       \n 1st Qu.:0.3223                                                       \n Median :0.3688                                                       \n Mean   :0.3853                                                       \n 3rd Qu.:0.4329                                                       \n Max.   :0.6240                                                       \n NA's   :180                                                          \n gini of household income reported in Gallup, by wp5-year\n Min.   :0.2010                                          \n 1st Qu.:0.3696                                          \n Median :0.4282                                          \n Mean   :0.4490                                          \n 3rd Qu.:0.5171                                          \n Max.   :0.9614                                          \n NA's   :370                                             \n Most people can be trusted, Gallup\n Min.   :0.0666                    \n 1st Qu.:0.1398                    \n Median :0.1984                    \n Mean   :0.2263                    \n 3rd Qu.:0.2816                    \n Max.   :0.6403                    \n NA's   :1668                      \n Most people can be trusted, WVS round 1981-1984\n Min.   :0.1765                                 \n 1st Qu.:0.2903                                 \n Median :0.3802                                 \n Mean   :0.3902                                 \n 3rd Qu.:0.4781                                 \n Max.   :0.5717                                 \n NA's   :1712                                   \n Most people can be trusted, WVS round 1989-1993\n Min.   :0.0660                                 \n 1st Qu.:0.2236                                 \n Median :0.2924                                 \n Mean   :0.2838                                 \n 3rd Qu.:0.3417                                 \n Max.   :0.5946                                 \n NA's   :1611                                   \n Most people can be trusted, WVS round 1994-1998\n Min.   :0.0487                                 \n 1st Qu.:0.1769                                 \n Median :0.2299                                 \n Mean   :0.2498                                 \n 3rd Qu.:0.2942                                 \n Max.   :0.6477                                 \n NA's   :1181                                   \n Most people can be trusted, WVS round 1999-2004\n Min.   :0.0759                                 \n 1st Qu.:0.1558                                 \n Median :0.2320                                 \n Mean   :0.2680                                 \n 3rd Qu.:0.3855                                 \n Max.   :0.6372                                 \n NA's   :1319                                   \n Most people can be trusted, WVS round 2005-2009\n Min.   :0.0382                                 \n 1st Qu.:0.1435                                 \n Median :0.1984                                 \n Mean   :0.2643                                 \n 3rd Qu.:0.3914                                 \n Max.   :0.7373                                 \n NA's   :1164                                   \n Most people can be trusted, WVS round 2010-2014\n Min.   :0.0315                                 \n 1st Qu.:0.1187                                 \n Median :0.1935                                 \n Mean   :0.2372                                 \n 3rd Qu.:0.3350                                 \n Max.   :0.6618                                 \n NA's   :1124                                   \n\n\n\n\nCode\n# Check for missing values\nmissing_data &lt;- sapply(happiness_data, function(x) sum(is.na(x)))\nprint(missing_data)\n\n\n                                                         Country name \n                                                                    0 \n                                                                 year \n                                                                    0 \n                                                          Life Ladder \n                                                                    0 \n                                                   Log GDP per capita \n                                                                   29 \n                                                       Social support \n                                                                   13 \n                                     Healthy life expectancy at birth \n                                                                   52 \n                                         Freedom to make life choices \n                                                                   31 \n                                                           Generosity \n                                                                   83 \n                                            Perceptions of corruption \n                                                                  103 \n                                                      Positive affect \n                                                                   21 \n                                                      Negative affect \n                                                                   15 \n                                    Confidence in national government \n                                                                  191 \n                                                   Democratic Quality \n                                                                  149 \n                                                     Delivery Quality \n                                                                  148 \n                         Standard deviation of ladder by country-year \n                                                                    0 \n                    Standard deviation/Mean of ladder by country-year \n                                                                    0 \n                                     GINI index (World Bank estimate) \n                                                                 1133 \nGINI index (World Bank estimate), average 2000-2017, unbalanced panel \n                                                                  180 \n             gini of household income reported in Gallup, by wp5-year \n                                                                  370 \n                                   Most people can be trusted, Gallup \n                                                                 1668 \n                      Most people can be trusted, WVS round 1981-1984 \n                                                                 1712 \n                      Most people can be trusted, WVS round 1989-1993 \n                                                                 1611 \n                      Most people can be trusted, WVS round 1994-1998 \n                                                                 1181 \n                      Most people can be trusted, WVS round 1999-2004 \n                                                                 1319 \n                      Most people can be trusted, WVS round 2005-2009 \n                                                                 1164 \n                      Most people can be trusted, WVS round 2010-2014 \n                                                                 1124 \n\n\nCode\n# Visualize missing data\nlibrary(DataExplorer)\nplot_missing(happiness_data)\n\n\n\n\n\nAfter filtering out the variables, I looked into the correlation matrix of the variables, which revealed a strong positive relationship between the happiness scores and “Log GDP per Capita,” “Healthy Life Expectancy,” and “Social Support.” What was interesting to find was that “Delivery Quality” was highly and positively correlated with the happiness scores. Additionally, negative correlations with “Perceptions of Corruption” and “gini of household income” underscore the importance of effective governance, which was presumable.\n\n\nCode\n# Select relevant columns\nhappiness_data &lt;- happiness_data %&gt;%\n  select(\n    `year`, `Country name`, `Life Ladder`, `Log GDP per capita`, `Social support`, `Freedom to make life choices`, `Healthy life expectancy at birth`,\n    `Generosity`, `Perceptions of corruption`, `Democratic Quality`, `Delivery Quality`, `GINI index (World Bank estimate), average 2000-2017, unbalanced panel`,\n    `Confidence in national government`, `gini of household income reported in Gallup, by wp5-year`\n  )\n\nhappiness_data &lt;- happiness_data %&gt;% \n  rename(`gini of income` = `gini of household income reported in Gallup, by wp5-year`)\n\n\n\n\nCode\n# Ensure the Life Ladder column is numeric\nhappiness_data &lt;- happiness_data %&gt;%\n  mutate(`Life Ladder` = as.numeric(`Life Ladder`))\n\n# Distribution of happiness scores\nggplot(happiness_data, aes(x = `Life Ladder`)) +\n  geom_histogram(binwidth = 0.5, fill = \"blue\", alpha = 0.7) +\n  theme_minimal() +\n  labs(title = \"Distribution of Happiness Scores\", x = \"Happiness Score\", y = \"Frequency\")\n\n\n\n\n\n\n\nCode\n# Correlation matrix for numeric variables\ncor_matrix &lt;- cor(select_if(happiness_data, is.numeric), use = \"complete.obs\")\n\n# Plot the correlation matrix with adjusted text size\ncorrplot(cor_matrix, method = \"circle\", type = \"upper\", tl.cex = 0.4)\n\n\n\n\n\nCode\nkey_variables &lt;- c(\n  \"Life Ladder\", \"Log GDP per capita\", \"Delivery Quality\",\n  \"Perceptions of corruption\", \"gini of income\"\n)\n\n# Pairwise scatterplots for key variables\npairs(\n  happiness_data[key_variables],\n  main = \"Pairwise Scatterplots of Key Variables\",\n  pch = 19,\n  col = rgb(0, 0, 0, alpha = 0.5)\n)\n\n\n\n\n\n\n\nCode\n# Boxplot of key variables to identify outliers\nkey_variables &lt;- c(\n  \"Life Ladder\", \"Log GDP per capita\", \"Delivery Quality\",\n  \"Perceptions of corruption\", \"gini of income\"\n)\n\nhappiness_data %&gt;%\n  select(all_of(key_variables)) %&gt;%\n  pivot_longer(cols = everything(), names_to = \"Variable\", values_to = \"Value\") %&gt;%\n  ggplot(aes(x = Variable, y = Value)) +\n  geom_boxplot(fill = \"skyblue\") +\n  theme_minimal() +\n  labs(title = \"Boxplots of Key Variables\", y = \"Value\")\n\n\n\n\n\nThen, I checked if there were any outliers present in these variables in order to get a better analysis of the data. Yet, there didn’t seem to be any prominent outliers that seem to lead to a distorted correlation matrix.\n\n\nCode\n# Average happiness scores over time\nhappiness_data %&gt;%\n  group_by(year) %&gt;%\n  summarize(Average_Happiness = mean(`Life Ladder`, na.rm = TRUE)) %&gt;%\n  ggplot(aes(x = year, y = Average_Happiness)) +\n  geom_line(color = \"blue\", size = 1) +\n  geom_point(color = \"red\", size = 2) +\n  theme_minimal() +\n  labs(title = \"Average Happiness Scores Over Time\", x = \"Year\", y = \"Average Happiness Score\")\n\n\n\n\n\nNext, the temporal analysis showed a gradual upward trend in average happiness scores from 2005 to 2019. As there was a sudden decline in the happiness scores from 2005 to 2006, I looked into detail what was the reason for this sudden change.\n\n\nCode\n# Filter data for the years 2006 and 2007\nhappiness_2005 &lt;- happiness_data %&gt;%\n  filter(year %in% c(2005))\n\n# Calculate average happiness scores by country and year\naverage_scores &lt;- happiness_2005 %&gt;%\n  group_by(`Country name`, year) %&gt;%\n  summarize(\n    avg_happiness = mean(`Life Ladder`, na.rm = TRUE)\n  ) %&gt;%\n  arrange(year, desc(avg_happiness)) # Sort by year and descending average happiness\n\n# View the result\nprint(average_scores)\n\n\n# A tibble: 27 × 3\n# Groups:   Country name [27]\n   `Country name`  year avg_happiness\n   &lt;chr&gt;          &lt;dbl&gt;         &lt;dbl&gt;\n 1 Denmark         2005          8.02\n 2 Netherlands     2005          7.46\n 3 Canada          2005          7.42\n 4 Sweden          2005          7.38\n 5 Australia       2005          7.34\n 6 Belgium         2005          7.26\n 7 Venezuela       2005          7.17\n 8 Spain           2005          7.15\n 9 France          2005          7.09\n10 Saudi Arabia    2005          7.08\n# ℹ 17 more rows\n\n\n\n\nCode\nhappiness_2006 &lt;- happiness_data %&gt;%\n  filter(year %in% c(2006))\n\n# Calculate average happiness scores by country and year\naverage_scores &lt;- happiness_2006 %&gt;%\n  group_by(`Country name`, year) %&gt;%\n  summarize(\n    avg_happiness = mean(`Life Ladder`, na.rm = TRUE)\n  ) %&gt;%\n  arrange(year, desc(avg_happiness)) # Sort by year and descending average happiness\n\n# View the result\nprint(average_scores)\n\n\n# A tibble: 89 × 3\n# Groups:   Country name [89]\n   `Country name`        year avg_happiness\n   &lt;chr&gt;                &lt;dbl&gt;         &lt;dbl&gt;\n 1 Finland               2006          7.67\n 2 Switzerland           2006          7.47\n 3 Norway                2006          7.42\n 4 New Zealand           2006          7.31\n 5 United States         2006          7.18\n 6 Israel                2006          7.17\n 7 Ireland               2006          7.14\n 8 Austria               2006          7.12\n 9 Costa Rica            2006          7.08\n10 United Arab Emirates  2006          6.73\n# ℹ 79 more rows\n\n\n\n\nCode\n# # Remove rows where the year is 2005\n# filtered_data &lt;- happiness_data %&gt;%\n#   filter(year != 2005)\n\n\n\n\nCode\n# Average happiness scores by country\naverage_happiness &lt;- happiness_data %&gt;%\n  group_by(`Country name`) %&gt;%\n  summarize(Average_Happiness = mean(`Life Ladder`, na.rm = TRUE)) %&gt;%\n  arrange(desc(Average_Happiness))\n\nprint(head(average_happiness, 10)) # Top 10 happiest countries\n\n\n# A tibble: 10 × 2\n   `Country name` Average_Happiness\n   &lt;chr&gt;                      &lt;dbl&gt;\n 1 Denmark                     7.69\n 2 Finland                     7.57\n 3 Switzerland                 7.55\n 4 Norway                      7.54\n 5 Netherlands                 7.46\n 6 Iceland                     7.43\n 7 Canada                      7.40\n 8 Sweden                      7.37\n 9 New Zealand                 7.31\n10 Australia                   7.29\n\n\nCode\nprint(tail(average_happiness, 10)) # Bottom 10 happiest countries\n\n\n# A tibble: 10 × 2\n   `Country name`           Average_Happiness\n   &lt;chr&gt;                                &lt;dbl&gt;\n 1 Comoros                               3.94\n 2 Zimbabwe                              3.93\n 3 Yemen                                 3.91\n 4 Tanzania                              3.69\n 5 Rwanda                                3.65\n 6 Afghanistan                           3.59\n 7 Togo                                  3.56\n 8 Burundi                               3.55\n 9 Central African Republic              3.51\n10 South Sudan                           3.40\n\n\nAfter filtering for specific years, 2005 and 2006, I noticed that the number of data for 2005 was lacking, and the countries included in the data for the year 2005 were those with high happiness scores. We could easily see that Denmark, Finland, and Switzerland were consistently high-ranking countries, while South Sudan and Afghanistan remained at the bottom due to systemic challenges like conflict and poverty.\n\n\nCode\n# Pairwise scatterplots for key variables\npairs(\n  select(happiness_data, `Life Ladder`, `Log GDP per capita`, `Delivery Quality`, `Healthy life expectancy at birth`),\n  main = \"Pairwise Scatterplots of Key Variables\",\n  pch = 19,\n  col = rgb(0, 0, 0, alpha = 0.5)\n)\n\n\n\n\n\n\n\nCode\n# Scatterplot matrix for selected variables\nggplot(happiness_data, aes(x = `Log GDP per capita`, y = `Life Ladder`)) +\n  geom_point(alpha = 0.7, color = \"darkblue\") +\n  geom_smooth(method = \"lm\", color = \"red\", se = TRUE) +\n  theme_minimal() +\n  labs(\n    title = \"Happiness vs. Log GDP per Capita\",\n    x = \"Log GDP per Capita\",\n    y = \"Happiness Score\"\n  )\n\n\n\n\n\n\n\nCode\n# Scatterplot of Happiness vs. Delivery Quality\nggplot(happiness_data, aes(x = `Delivery Quality`, y = `Life Ladder`)) +\n  geom_point(alpha = 0.7, color = \"green\") +\n  geom_smooth(method = \"lm\", color = \"red\", se = TRUE) +\n  theme_minimal() +\n  labs(\n    title = \"Happiness vs. Delivery Quality\",\n    x = \"Delivery Quality\",\n    y = \"Happiness Score\"\n  )\n\n\n\n\n\n\n\nCode\n# Scatterplot of Happiness vs. Gini Income\nggplot(happiness_data, aes(x = `gini of income`, y = `Life Ladder`)) +\n  geom_point(alpha = 0.7, color = \"green\") +\n  geom_smooth(method = \"lm\", color = \"red\", se = TRUE) +\n  theme_minimal() +\n  labs(\n    title = \"Happiness vs. Gini Income\",\n    x = \"GINI Income\",\n    y = \"Happiness\"\n  )\n\n\n\n\n\nScatterplots of happiness against key predictors reveal actionable insights. The positive relationship between happiness and “Log GDP per Capita” reinforces the importance of economic growth, while the negative correlation with the “GINI Index” highlights the adverse effects of income inequality. Similarly, variables such as “Delivery Quality” show moderate to strong positive correlations with happiness, underlining the role of governance and personal agency in improving well-being. With this EDA process, I could determine which variables to focus on for further spatial analyses."
  },
  {
    "objectID": "country_level2.html",
    "href": "country_level2.html",
    "title": "Analysis of Geography-Based Happiness Patterns",
    "section": "",
    "text": "Next, I wanted to look at the global happiness scores by their geographical factors, categorizing countries into coastal, landlocked, and climate zones. As nature is one of the factors that people find awe and interest, I thought nature could be a factor determining people’s happiness. Also, people living in extreme conditions would have difficulties living compared to those living in other moderate climates; in Korea, there are alerts when the weather gets too hot, cautioning people not to get irritated. Thus I thought climates, especially places that do not have favorable conditions for living, would influence peoples’ overall feelings. Patterns of happiness distribution and the role of geographic and climatic factors were analyzed.\n\n\nCode\n# Load libraries\nlibrary(tidyverse)\nlibrary(sf)\nlibrary(spdep)\nlibrary(viridis)\nlibrary(readxl)\nlibrary(rnaturalearth)\nlibrary(rnaturalearthdata)\nlibrary(corrplot)\n\n\n\n\nCode\n# Load spatial and happiness datasets\nworld_sf &lt;- rnaturalearth::ne_countries(scale = \"medium\", returnclass = \"sf\")\nhappiness_data &lt;- read_excel(\"../data/WHR20_DataForTable2.1.xls\")\n\n\n\n\nCode\n# Select relevant columns\nhappiness_data &lt;- happiness_data %&gt;%\n  select(\n    `year`, `Country name`, `Life Ladder`, `Log GDP per capita`, `Social support`, `Freedom to make life choices`, `Healthy life expectancy at birth`,\n    `Generosity`, `Perceptions of corruption`, `Democratic Quality`, `Delivery Quality`, `GINI index (World Bank estimate), average 2000-2017, unbalanced panel`,\n    `Confidence in national government`, `gini of household income reported in Gallup, by wp5-year`\n  )\n\nhappiness_data &lt;- happiness_data %&gt;% \n  rename(`gini of income` = `gini of household income reported in Gallup, by wp5-year`)\n\n\n\n\nCode\n# Ensure the Life Ladder column is numeric\nhappiness_data &lt;- happiness_data %&gt;%\n  mutate(`Life Ladder` = as.numeric(`Life Ladder`))\n\n\n\n\nCode\nkey_variables &lt;- c(\n  \"Life Ladder\", \"Log GDP per capita\", \"Delivery Quality\",\n  \"Perceptions of corruption\", \"gini of income\"\n)\n\n\n\n\nCode\n# Merge spatial and happiness data\nmerged_sf &lt;- left_join(world_sf, happiness_data, by = c(\"name\" = \"Country name\"))\nmerged_sf &lt;- merged_sf[!is.na(merged_sf$`Life Ladder`), ] # Remove rows with missing happiness scores\n\n\n\n\nCode\nmerged_sf &lt;- st_transform(merged_sf, crs = 3857)\nworld_sf &lt;- st_transform(world_sf, crs = 3857)\n\n\n\nCoastal vs. Landlocked Countries\n\n\nCode\n# Load coastline data\ncoastline &lt;- ne_download(scale = \"medium\", type = \"coastline\", category = \"physical\", returnclass = \"sf\")\n\n\nReading layer `ne_50m_coastline' from data source \n  `/private/var/folders/jb/_57y0k0x0wj5rxjpxc000yxc0000gn/T/RtmpwCofr5/ne_50m_coastline.shp' \n  using driver `ESRI Shapefile'\nSimple feature collection with 1428 features and 3 fields\nGeometry type: MULTILINESTRING\nDimension:     XY\nBounding box:  xmin: -180 ymin: -85.19219 xmax: 180 ymax: 83.59961\nGeodetic CRS:  WGS 84\n\n\nCode\n# Combine coastlines into a single geometry\ncoastline_union &lt;- st_union(coastline)\n\n\n\n\nCode\n# Ensure merged_sf and coastline_union have the same CRS\nif (st_crs(merged_sf) != st_crs(coastline_union)) {\n  coastline_union &lt;- st_transform(coastline_union, st_crs(merged_sf))\n}\n\n\n\n\nCode\n# Categorize countries as coastal or landlocked\nmerged_sf$coastal &lt;- ifelse(\n  lengths(st_is_within_distance(merged_sf$geometry, coastline_union, dist = 5 * 1000)) &gt; 0,\n  \"Coastal\",\n  \"Landlocked\"\n)\n\n\n\n\nCode\n# Compute summary statistics\ncoastal_stats &lt;- merged_sf %&gt;%\n  group_by(coastal) %&gt;%\n  summarize(avg_happiness = mean(`Life Ladder`, na.rm = TRUE))\n\nprint(coastal_stats)\n\n\nSimple feature collection with 2 features and 2 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -20037510 ymin: -7536886 xmax: 20037510 ymax: 17928860\nProjected CRS: WGS 84 / Pseudo-Mercator\n# A tibble: 2 × 3\n  coastal    avg_happiness                                              geometry\n  &lt;chr&gt;              &lt;dbl&gt;                                    &lt;MULTIPOLYGON [m]&gt;\n1 Coastal             5.61 (((-19616810 -5516741, -19616119 -5507870, -19617756…\n2 Landlocked          4.95 (((-6456041 -2343584, -6454199 -2351065, -6452356 -2…\n\n\n\n\nCode\n# Visualize happiness scores for coastal vs. landlocked\nggplot(merged_sf) +\n  geom_sf(aes(fill = `Life Ladder`), color = \"white\") +\n  facet_wrap(~coastal) +\n  scale_fill_viridis_c(option = \"C\") +\n  theme_minimal() +\n  labs(title = \"Happiness Scores: Coastal vs Landlocked\", fill = \"Happiness Score\")\n\n\n\n\n\nCountries were classified as coastal or landlocked by assessing proximity to coastlines. A comparison of average happiness scores revealed that coastal countries tend to be happier (avg_happiness = 5.61) than landlocked countries (avg_happiness = 4.95). Choropleth maps visualized this distinction, highlighting higher happiness scores along coastlines.\n\n\nCode\ntable(merged_sf$coastal)\n\n\n\n   Coastal Landlocked \n      1313        387 \n\n\n\n\nCode\n# Subset coastal and landlocked countries\ncoastal_countries &lt;- merged_sf[merged_sf$coastal == \"Coastal\", ]\nlandlocked_countries &lt;- merged_sf[merged_sf$coastal == \"Landlocked\", ]\n\n# Create spatial weights for coastal countries\ncoastal_coords &lt;- st_coordinates(st_centroid(coastal_countries))\ncoastal_knn &lt;- spdep::knearneigh(coastal_coords, k = 5)\ncoastal_listw &lt;- spdep::nb2listw(spdep::knn2nb(coastal_knn), style = \"W\")\n\n# Moran's I for coastal countries\ncoastal_moran &lt;- spdep::moran.test(coastal_countries$`Life Ladder`, coastal_listw)\nprint(coastal_moran)\n\n\n\n    Moran I test under randomisation\n\ndata:  coastal_countries$`Life Ladder`  \nweights: coastal_listw    \n\nMoran I statistic standard deviate = 59.681, p-value &lt; 2.2e-16\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n     0.8947287248     -0.0007621951      0.0002251377 \n\n\nCode\n# Create spatial weights for landlocked countries\nlandlocked_coords &lt;- st_coordinates(st_centroid(landlocked_countries))\nlandlocked_knn &lt;- spdep::knearneigh(landlocked_coords, k = 5)\nlandlocked_listw &lt;- spdep::nb2listw(spdep::knn2nb(landlocked_knn), style = \"W\")\n\n# Moran's I for landlocked countries\nlandlocked_moran &lt;- spdep::moran.test(landlocked_countries$`Life Ladder`, landlocked_listw)\nprint(landlocked_moran)\n\n\n\n    Moran I test under randomisation\n\ndata:  landlocked_countries$`Life Ladder`  \nweights: landlocked_listw    \n\nMoran I statistic standard deviate = 27.586, p-value &lt; 2.2e-16\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n      0.750651349      -0.002590674       0.000745582 \n\n\n\n\nCode\n# Monte Carlo simulation for coastal countries\ncoastal_mc &lt;- spdep::moran.mc(coastal_countries$`Life Ladder`, coastal_listw, nsim = 999)\nplot(coastal_mc, main = \"Monte Carlo for Coastal Countries\")\n\n\n\n\n\nCode\nprint(coastal_mc)\n\n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  coastal_countries$`Life Ladder` \nweights: coastal_listw  \nnumber of simulations + 1: 1000 \n\nstatistic = 0.89473, observed rank = 1000, p-value = 0.001\nalternative hypothesis: greater\n\n\nCode\n# Monte Carlo simulation for landlocked countries\nlandlocked_mc &lt;- spdep::moran.mc(landlocked_countries$`Life Ladder`, landlocked_listw, nsim = 999)\nplot(landlocked_mc, main = \"Monte Carlo for Landlocked Countries\")\n\n\n\n\n\nCode\nprint(landlocked_mc)\n\n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  landlocked_countries$`Life Ladder` \nweights: landlocked_listw  \nnumber of simulations + 1: 1000 \n\nstatistic = 0.75065, observed rank = 1000, p-value = 0.001\nalternative hypothesis: greater\n\n\n\n\nCode\n# Convert political_freedom_category to numeric\nmerged_sf$coastal_numeric &lt;- as.numeric(as.factor(merged_sf$coastal))\n\n# Compute Moran's I for Political Freedom\ncoastal_countries_nb &lt;- spdep::poly2nb(merged_sf, queen = TRUE)\n\n# Allow empty neighbor sets\ncoastal_countries_listw &lt;- spdep::nb2listw(coastal_countries_nb, style = \"W\", zero.policy = TRUE)\n\n# Compute Moran's I for the numeric version of political freedom\ncoastal_countries_moran &lt;- spdep::moran.test(merged_sf$coastal_numeric, coastal_countries_listw, zero.policy = TRUE)\n\n# Print the Moran's I result\nprint(coastal_countries_moran)\n\n\n\n    Moran I test under randomisation\n\ndata:  merged_sf$coastal_numeric  \nweights: coastal_countries_listw  \nn reduced by no-neighbour observations  \n\nMoran I statistic standard deviate = 53.815, p-value &lt; 2.2e-16\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n     3.110764e-01     -5.892752e-04      3.354108e-05 \n\n\nMoran’s I analysis showed strong spatial autocorrelation for both groups, with coastal countries exhibiting a higher Moran’s I value (0.894) compared to landlocked countries (0.751). This indicates tighter clustering of happiness scores among coastal countries, where neighboring regions often share similar happiness levels. Monte Carlo simulations confirmed the significance of these findings (p-value &lt; 0.001), suggesting geography strongly influences happiness distribution.\n\n\nClimate Zones and Happiness\nCountries were further categorized into climate zones (Tropical, Subtropical, Temperate, and Polar) based on latitude. Average happiness scores varied across these zones:\nPolar: 7.09 (highest) Temperate: 5.92 Subtropical: 5.57 Tropical: 4.93 (lowest)\n\n\nCode\nmerged_sf &lt;- st_transform(merged_sf, crs = 4326)\nmerged_sf$latitude &lt;- st_coordinates(st_centroid(merged_sf))[, 2]\n\n\n\n\nCode\nsummary(merged_sf$latitude)\n\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n-41.702   7.948  24.087  22.712  42.716  66.360 \n\n\n\n\nCode\n# Categorize countries into climate zones\nmerged_sf$climate_zone &lt;- case_when(\n  merged_sf$latitude &gt;= -23.5 & merged_sf$latitude &lt;= 23.5 ~ \"Tropical\",\n  merged_sf$latitude &gt; 23.5 & merged_sf$latitude &lt;= 40 ~ \"Sub Tropical\",\n  merged_sf$latitude &lt; -23.5 & merged_sf$latitude &gt;= -40 ~ \"Sub Tropical\",\n  merged_sf$latitude &gt; 40 & merged_sf$latitude &lt;= 60 ~ \"Temperate\",\n  merged_sf$latitude &lt; -40 & merged_sf$latitude &gt;= -60 ~ \"Temperate\",\n  merged_sf$latitude &gt; 60 | merged_sf$latitude &lt; -60 ~ \"Polar\",\n  TRUE ~ NA_character_ # Assign NA if no condition matches\n)\n\n# Compute average happiness by climate zone\nclimate_stats &lt;- merged_sf %&gt;%\n  group_by(climate_zone) %&gt;%\n  summarize(avg_happiness = mean(`Life Ladder`, na.rm = TRUE))\n\nprint(climate_stats)\n\n\nSimple feature collection with 4 features and 2 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -180 ymin: -55.8917 xmax: 180 ymax: 83.11611\nGeodetic CRS:  WGS 84\n# A tibble: 4 × 3\n  climate_zone avg_happiness                                            geometry\n  &lt;chr&gt;                &lt;dbl&gt;                                  &lt;MULTIPOLYGON [°]&gt;\n1 Polar                 7.09 (((21.97979 60.35522, 21.90781 60.39316, 21.95029 …\n2 Sub Tropical          5.57 (((53.05518 39.03794, 53.09219 39.09409, 53.05332 …\n3 Temperate             5.92 (((21.03174 55.35049, 21.10391 55.48774, 21.11572 …\n4 Tropical              4.93 (((-12.50063 7.535107, -12.5125 7.582422, -12.5441…\n\n\nCode\n# Visualize happiness scores by climate zone\nggplot(merged_sf) +\n  geom_sf(aes(fill = `Life Ladder`), color = \"white\") +\n  facet_wrap(~climate_zone) +\n  scale_fill_viridis_c(option = \"C\") +\n  theme_minimal() +\n  labs(title = \"Happiness Scores by Climate Zone\", fill = \"Happiness Score\")\n\n\n\n\n\n\n\nMoran’s I by Climate Zone\n\n\nCode\n# Subset tropical, sub tropical, temperate, and polar countries\ntropical_countries &lt;- merged_sf[merged_sf$climate_zone == \"Tropical\", ]\nsubtropical_countries &lt;- merged_sf[merged_sf$climate_zone == \"Sub Tropical\", ]\ntemperate_countries &lt;- merged_sf[merged_sf$climate_zone == \"Temperate\", ]\npolar_countries &lt;- merged_sf[merged_sf$climate_zone == \"Polar\", ]\n\n\n\n\nCode\n# Create spatial weights for tropical countries\ntropical_coords &lt;- st_coordinates(st_centroid(tropical_countries))\ntropical_knn &lt;- spdep::knearneigh(tropical_coords, k = 5)\ntropical_listw &lt;- spdep::nb2listw(spdep::knn2nb(tropical_knn), style = \"W\")\n\n# Moran's I for tropical countries\ntropical_moran &lt;- spdep::moran.test(tropical_countries$`Life Ladder`, tropical_listw)\nprint(tropical_moran)\n\n\n\n    Moran I test under randomisation\n\ndata:  tropical_countries$`Life Ladder`  \nweights: tropical_listw    \n\nMoran I statistic standard deviate = 39.31, p-value &lt; 2.2e-16\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n     0.7989590239     -0.0014064698      0.0004145492 \n\n\n\n\nCode\n# Calculate centroids for subtropical countries\nsubtropical_coords &lt;- st_coordinates(st_centroid(subtropical_countries))\n\n# Create spatial weights using k-nearest neighbors\nsubtropical_knn &lt;- spdep::knearneigh(subtropical_coords, k = 5)\nsubtropical_listw &lt;- spdep::nb2listw(spdep::knn2nb(subtropical_knn), style = \"W\")\n\n# Moran's I for subtropical countries\nsubtropical_moran &lt;- spdep::moran.test(subtropical_countries$`Life Ladder`, subtropical_listw)\nprint(subtropical_moran)\n\n\n\n    Moran I test under randomisation\n\ndata:  subtropical_countries$`Life Ladder`  \nweights: subtropical_listw    \n\nMoran I statistic standard deviate = 29.766, p-value &lt; 2.2e-16\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n      0.762913234      -0.002272727       0.000660848 \n\n\n\n\nCode\n# Create spatial weights for temperate countries\ntemperate_coords &lt;- st_coordinates(st_centroid(temperate_countries))\ntemperate_knn &lt;- spdep::knearneigh(temperate_coords, k = 5)\ntemperate_listw &lt;- spdep::nb2listw(spdep::knn2nb(temperate_knn), style = \"W\")\n\n# Moran's I for temperate countries\ntemperate_moran &lt;- spdep::moran.test(temperate_countries$`Life Ladder`, temperate_listw)\nprint(temperate_moran)\n\n\n\n    Moran I test under randomisation\n\ndata:  temperate_countries$`Life Ladder`  \nweights: temperate_listw    \n\nMoran I statistic standard deviate = 40.219, p-value &lt; 2.2e-16\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n     0.9825625838     -0.0020964361      0.0005993889 \n\n\n\n\nCode\n# Create spatial weights for polar countries\npolar_coords &lt;- st_coordinates(st_centroid(polar_countries))\npolar_knn &lt;- spdep::knearneigh(polar_coords, k = 5)\npolar_listw &lt;- spdep::nb2listw(spdep::knn2nb(polar_knn), style = \"W\")\n\n# Moran's I for Polar countries\npolar_moran &lt;- spdep::moran.test(polar_countries$`Life Ladder`, polar_listw)\nprint(polar_moran)\n\n\n\n    Moran I test under randomisation\n\ndata:  polar_countries$`Life Ladder`  \nweights: polar_listw    \n\nMoran I statistic standard deviate = 17.671, p-value &lt; 2.2e-16\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n      1.060022784      -0.014705882       0.003698951 \n\n\n\n\nCode\n# Monte Carlo simulation for tropical countries\ntropical_mc &lt;- spdep::moran.mc(tropical_countries$`Life Ladder`, tropical_listw, nsim = 999)\nplot(tropical_mc, main = \"Monte Carlo for Tropical Countries\")\n\n\n\n\n\nCode\nprint(tropical_mc)\n\n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  tropical_countries$`Life Ladder` \nweights: tropical_listw  \nnumber of simulations + 1: 1000 \n\nstatistic = 0.79896, observed rank = 1000, p-value = 0.001\nalternative hypothesis: greater\n\n\nCode\n# Monte Carlo simulation for subtropical countries\nsubtropical_mc &lt;- spdep::moran.mc(subtropical_countries$`Life Ladder`, subtropical_listw, nsim = 999)\nplot(subtropical_mc, main = \"Monte Carlo for Subtropical Countries\")\n\n\n\n\n\nCode\nprint(subtropical_mc)\n\n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  subtropical_countries$`Life Ladder` \nweights: subtropical_listw  \nnumber of simulations + 1: 1000 \n\nstatistic = 0.76291, observed rank = 1000, p-value = 0.001\nalternative hypothesis: greater\n\n\nCode\n# Monte Carlo simulation for temperate countries\ntemperate_mc &lt;- spdep::moran.mc(temperate_countries$`Life Ladder`, temperate_listw, nsim = 999)\nplot(temperate_mc, main = \"Monte Carlo for Temperate Countries\")\n\n\n\n\n\nCode\nprint(temperate_mc)\n\n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  temperate_countries$`Life Ladder` \nweights: temperate_listw  \nnumber of simulations + 1: 1000 \n\nstatistic = 0.98256, observed rank = 1000, p-value = 0.001\nalternative hypothesis: greater\n\n\nCode\n# Monte Carlo simulation for polar countries\npolar_mc &lt;- spdep::moran.mc(polar_countries$`Life Ladder`, polar_listw, nsim = 999)\nplot(polar_mc, main = \"Monte Carlo for Polar Countries\")\n\n\n\n\n\nCode\nprint(polar_mc)\n\n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  polar_countries$`Life Ladder` \nweights: polar_listw  \nnumber of simulations + 1: 1000 \n\nstatistic = 1.06, observed rank = 1000, p-value = 0.001\nalternative hypothesis: greater\n\n\nThe polar region, including countries like Finland and Norway, exhibited the highest happiness scores. Conversely, tropical regions, often characterized by economic and social challenges, recorded the lowest scores, which was quite odd. Spatial weights and Moran’s I tests revealed significant clustering within each climate zone, with temperate regions displaying the strongest spatial autocorrelation (Moran’s I = 0.983).\nTo look into a closer look at if this result was correct, I checked if there were any outliers for polar regions. It seemed strange to me that people living in extreme conditions had higher happiness scores, and I wanted to check if there were any points in the data that led to a mistinterpretation.\n\n\nPolar Outliers\n\n\nCode\n# Count the number of polar countries\nnum_polar_countries &lt;- nrow(polar_countries)\nprint(paste(\"Number of polar countries:\", num_polar_countries))\n\n\n[1] \"Number of polar countries: 69\"\n\n\n\n\nCode\n# Boxplot to check for outliers\nggplot(polar_countries, aes(y = `Life Ladder`)) +\n  geom_boxplot(fill = \"skyblue\") +\n  theme_minimal() +\n  labs(title = \"Boxplot of Happiness Scores in Polar Countries\", y = \"Happiness Score\")\n\n\n\n\n\nCode\n# Histogram for distribution\nggplot(polar_countries, aes(x = `Life Ladder`)) +\n  geom_histogram(binwidth = 0.5, fill = \"blue\", alpha = 0.7) +\n  theme_minimal() +\n  labs(title = \"Distribution of Happiness Scores in Polar Countries\", x = \"Happiness Score\", y = \"Frequency\")\n\n\n\n\n\n\n\nCode\n# List polar countries with highest happiness scores\ntop_polar_countries &lt;- polar_countries %&gt;%\n  arrange(desc(`Life Ladder`)) %&gt;%\n  select(`name`, `Life Ladder`)\nprint(top_polar_countries)\n\n\nSimple feature collection with 69 features and 2 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -180 ymin: 41.19927 xmax: 180 ymax: 83.11611\nGeodetic CRS:  WGS 84\nFirst 10 features:\n      name Life Ladder                       geometry\n1  Finland    7.858107 MULTIPOLYGON (((24.15547 65...\n2  Finland    7.788252 MULTIPOLYGON (((24.15547 65...\n3  Finland    7.780348 MULTIPOLYGON (((24.15547 65...\n4   Norway    7.678277 MULTIPOLYGON (((20.62217 69...\n5  Finland    7.672449 MULTIPOLYGON (((24.15547 65...\n6  Finland    7.670627 MULTIPOLYGON (((24.15547 65...\n7  Finland    7.659843 MULTIPOLYGON (((24.15547 65...\n8   Canada    7.650346 MULTIPOLYGON (((-132.6555 5...\n9   Norway    7.632288 MULTIPOLYGON (((20.62217 69...\n10  Norway    7.603434 MULTIPOLYGON (((20.62217 69...\n\n\n\n\nCode\n# Filter out potential outliers (e.g., scores above a certain threshold)\npolar_no_outliers &lt;- polar_countries %&gt;%\n  filter(`Life Ladder` &lt; quantile(`Life Ladder`, 0.95)) # Adjust threshold if needed\n\n# Recalculate Moran's I for polar countries without outliers\npolar_no_outliers_coords &lt;- st_coordinates(st_centroid(polar_no_outliers))\npolar_no_outliers_knn &lt;- spdep::knearneigh(polar_no_outliers_coords, k = 5)\npolar_no_outliers_listw &lt;- spdep::nb2listw(spdep::knn2nb(polar_no_outliers_knn), style = \"W\")\npolar_no_outliers_moran &lt;- spdep::moran.test(polar_no_outliers$`Life Ladder`, polar_no_outliers_listw)\nprint(polar_no_outliers_moran)\n\n\n\n    Moran I test under randomisation\n\ndata:  polar_no_outliers$`Life Ladder`  \nweights: polar_no_outliers_listw    \n\nMoran I statistic standard deviate = 17.268, p-value &lt; 2.2e-16\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n      1.078217837      -0.015625000       0.004012719 \n\n\n\n\nCode\n# Monte Carlo simulation for Moran's I in polar region\npolar_mc &lt;- spdep::moran.mc(\n  polar_countries$`Life Ladder`,\n  polar_listw,\n  nsim = 999 # Number of simulations\n)\n\n# Plot Monte Carlo results\nplot(polar_mc, main = \"Monte Carlo Simulation for Moran's I in Polar Region\")\n\n\n\n\n\n\n\nCode\n# Calculate Local Moran's I\npolar_local_moran &lt;- spdep::localmoran(polar_countries$`Life Ladder`, polar_listw)\n\n# Add Local Moran's I results to the dataset\npolar_countries$Ii &lt;- polar_local_moran[, \"Ii\"]\npolar_countries$p_value &lt;- polar_local_moran[, \"Pr(z != E(Ii))\"]\n\n# Visualize clusters in polar regions\nggplot(polar_countries) +\n  geom_sf(aes(fill = Ii), color = \"black\") +\n  scale_fill_gradient2(low = \"blue\", mid = \"white\", high = \"red\", midpoint = 0) +\n  theme_minimal() +\n  labs(title = \"Local Moran's I for Happiness Scores in Polar Region\", fill = \"Local Moran's I\")\n\n\n\n\n\nOutliers in the dataset, such as extremely high or low scores, were identified and filtered to refine spatial patterns further.The Hotspot analysis using Local Moran’s I and Getis-Ord Gi* highlighted regions with localized clusters of high (hotspots) and low (coldspots) happiness scores. Unlike what I have expected, Polar countries demonstrated clear clusters of high happiness, which may be influenced by strong social systems and high standards of living.\n\n\nFindings\nThis analysis underscores the influence of geography and climate on happiness. Coastal countries, with access to trade, tourism, and natural resources, tend to have higher happiness scores and stronger clustering. Climate also plays a critical role, with polar and temperate zones benefiting from favorable socioeconomic conditions. The findings highlight how geographic proximity and environmental factors shape well-being, offering insights for policymakers aiming to address disparities."
  },
  {
    "objectID": "country_level4.html",
    "href": "country_level4.html",
    "title": "Analysis of Population Density and Happiness Pattern",
    "section": "",
    "text": "Then, I looked at the relationship between population density and happiness across countries. By categorizing countries into population density tiers and analyzing happiness scores (Life Ladder), it demonstrated patterns and clustering in global well-being.\n\n\nCode\n# Load libraries\nlibrary(tidyverse)\nlibrary(sf)\nlibrary(spdep)\nlibrary(viridis)\nlibrary(readxl)\nlibrary(rnaturalearth)\nlibrary(rnaturalearthdata)\nlibrary(corrplot)\n\n\n\n\nCode\n# Load spatial and happiness datasets\nworld_sf &lt;- rnaturalearth::ne_countries(scale = \"medium\", returnclass = \"sf\")\nhappiness_data &lt;- read_excel(\"../data/WHR20_DataForTable2.1.xls\")\n\n\n\n\nCode\n# Select relevant columns\nhappiness_data &lt;- happiness_data %&gt;%\n  select(\n    `year`, `Country name`, `Life Ladder`, `Log GDP per capita`\n  )\n\n\n\n\nCode\n# Ensure the Life Ladder column is numeric\nhappiness_data &lt;- happiness_data %&gt;%\n  mutate(`Life Ladder` = as.numeric(`Life Ladder`))\n\n\n\n\nCode\n# Merge spatial and happiness data\nmerged_sf &lt;- left_join(world_sf, happiness_data, by = c(\"name\" = \"Country name\"))\nmerged_sf &lt;- merged_sf[!is.na(merged_sf$`Life Ladder`), ] # Remove rows with missing happiness scores\n\n\n\n\nCode\nmerged_sf &lt;- st_transform(merged_sf, crs = 3857)\n\n\n\n\nCode\ncountry_area &lt;- read_csv(\"../data/Area.csv\", show_col_types = FALSE)\n\n\n\n\nCode\ncountry_area &lt;- country_area %&gt;% \n  select(`name`, `sq km`)\n\n\n\n\nCode\nmerged_sf &lt;- left_join(merged_sf, country_area, by = c(\"name\" = \"name\"))\n\n\n\n\nCode\nmerged_sf &lt;- merged_sf %&gt;%\n  mutate(pop_density = pop_est / `sq km`)\n\n\nTo get an understanding of the relationship between the happiness scores and the countries’ population densities, I merged the global spatial data with happiness indicators, and the population density by using population estimates and land area. Countries were categorized into four classes based on population density:\nLow Density: Sparsely populated regions. Medium Density: Moderately populated countries. High Density: Countries with significant population concentration. Very High Density: Extremely dense regions.\n\n\nCode\n# Categorize countries by population density\nmerged_sf$pop_density_category &lt;- cut(\n  merged_sf$pop_density,\n  breaks = quantile(merged_sf$pop_density, probs = seq(0, 1, by = 0.25), na.rm = TRUE),\n  labels = c(\"Low\", \"Medium\", \"High\", \"Very High\"),\n  include.lowest = TRUE\n)\n\n# Compute average happiness by population density\ndensity_stats &lt;- merged_sf %&gt;%\n  group_by(pop_density_category) %&gt;%\n  summarize(avg_happiness = mean(`Life Ladder`, na.rm = TRUE))\n\nprint(density_stats)\n\n\nSimple feature collection with 5 features and 2 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -20037510 ymin: -7536886 xmax: 20037510 ymax: 17928860\nProjected CRS: WGS 84 / Pseudo-Mercator\n# A tibble: 5 × 3\n  pop_density_category avg_happiness                                    geometry\n  &lt;fct&gt;                        &lt;dbl&gt;                          &lt;MULTIPOLYGON [m]&gt;\n1 Low                           5.76 (((-19611874 -5515359, -19616810 -5516741,…\n2 Medium                        5.08 (((-12355284 2138829, -12350017 2131604, -…\n3 High                          5.40 (((-6032185 354039.6, -6018286 373503.2, -…\n4 Very High                     5.64 (((-6846018 1191178, -6850704 1194076, -68…\n5 &lt;NA&gt;                          5.27 (((-1672516 1551969, -1662645 1549585, -16…\n\n\nCode\n# Visualize happiness by population density\nggplot(merged_sf) +\n  geom_sf(aes(fill = `Life Ladder`), color = \"white\") +\n  facet_wrap(~pop_density_category) +\n  scale_fill_viridis_c(option = \"B\") +\n  theme_minimal() +\n  labs(title = \"Happiness Scores by Population Density\", fill = \"Happiness Score\")\n\n\n\n\n\nAverage happiness scores varied across these categories, with low-density countries having the highest average happiness (5.76), followed by very high-density countries (5.64), and medium-density countries showing the lowest average happiness (5.08). This suggests a complex relationship between population density and well-being, potentially influenced by governance, resource allocation, or cultural factors.\n\nSpatial Autocorrelation Analysis\n\n\nCode\nmerged_sf &lt;- merged_sf[!is.na(merged_sf$`pop_density_category`), ] # Remove rows with missing happiness scores\n\n\n\n\nCode\n# Subset coastal and landlocked countries\nlow_den_countries &lt;- merged_sf[merged_sf$pop_density_category == \"Low\", ]\nmod_den_countries &lt;- merged_sf[merged_sf$pop_density_category == \"Medium\", ]\nhigh_den_countries &lt;- merged_sf[merged_sf$pop_density_category == \"High\", ]\nvery_high_den_countries &lt;- merged_sf[merged_sf$pop_density_category == \"Very High\", ]\n\n# Create spatial weights for Low Freedom countries\nlow_den_coords &lt;- st_coordinates(st_centroid(low_den_countries))\nlow_den_knn &lt;- spdep::knearneigh(low_den_coords, k = 5)\nlow_den_listw &lt;- spdep::nb2listw(spdep::knn2nb(low_den_knn), style = \"W\")\n\n# Moran's I for Low Freedom countries\nlow_den_moran &lt;- spdep::moran.test(low_den_countries$`Life Ladder`, low_den_listw)\nprint(low_den_moran)\n\n\n\n    Moran I test under randomisation\n\ndata:  low_den_countries$`Life Ladder`  \nweights: low_den_listw    \n\nMoran I statistic standard deviate = 34.123, p-value &lt; 2.2e-16\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n      0.899723894      -0.002403846       0.000698963 \n\n\nCode\n# Create spatial weights for Moderate Freedom countries\nmod_den_coords &lt;- st_coordinates(st_centroid(mod_den_countries))\nmod_den_knn &lt;- spdep::knearneigh(mod_den_coords, k = 5)\nmod_den_listw &lt;- spdep::nb2listw(spdep::knn2nb(mod_den_knn), style = \"W\")\n\n# Moran's I for Moderate Freedom countries\nmod_den_moran &lt;- spdep::moran.test(mod_den_countries$`Life Ladder`, mod_den_listw)\nprint(mod_den_moran)\n\n\n\n    Moran I test under randomisation\n\ndata:  mod_den_countries$`Life Ladder`  \nweights: mod_den_listw    \n\nMoran I statistic standard deviate = 29.931, p-value &lt; 2.2e-16\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n     0.7767110780     -0.0023584906      0.0006774891 \n\n\nCode\n# Create spatial weights for High Freedom countries\nhigh_den_coords &lt;- st_coordinates(st_centroid(high_den_countries))\nhigh_den_knn &lt;- spdep::knearneigh(high_den_coords, k = 5)\nhigh_den_listw &lt;- spdep::nb2listw(spdep::knn2nb(high_den_knn), style = \"W\")\n\n# Moran's I for High Freedom countries\nhigh_den_moran &lt;- spdep::moran.test(high_den_countries$`Life Ladder`, high_den_listw)\nprint(high_den_moran)\n\n\n\n    Moran I test under randomisation\n\ndata:  high_den_countries$`Life Ladder`  \nweights: high_den_listw    \n\nMoran I statistic standard deviate = 34.934, p-value &lt; 2.2e-16\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n     0.9176698391     -0.0024154589      0.0006936928 \n\n\nCode\n# Create spatial weights for High Freedom countries\nvery_high_den_coords &lt;- st_coordinates(st_centroid(very_high_den_countries))\nvery_high_den_knn &lt;- spdep::knearneigh(very_high_den_coords, k = 5)\nvery_high_den_listw &lt;- spdep::nb2listw(spdep::knn2nb(very_high_den_knn), style = \"W\")\n\n# Moran's I for High Freedom countries\nvery_high_den_moran &lt;- spdep::moran.test(very_high_den_countries$`Life Ladder`, very_high_den_listw)\nprint(very_high_den_moran)\n\n\n\n    Moran I test under randomisation\n\ndata:  very_high_den_countries$`Life Ladder`  \nweights: very_high_den_listw    \n\nMoran I statistic standard deviate = 31.941, p-value &lt; 2.2e-16\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n     0.8572851007     -0.0024813896      0.0007245273 \n\n\nMoran’s I tests revealed significant spatial clustering of happiness scores within each population density category:\nLow Density: Moran’s I = 0.899, indicating strong clustering of happiness scores. Medium Density: Moran’s I = 0.777, showing moderate clustering. High Density: Moran’s I = 0.918, highlighting strong spatial autocorrelation. Very High Density: Moran’s I = 0.857, suggesting robust clustering.\nThese results showed that happiness scores are not randomly distributed but influenced by geographic proximity and shared regional characteristics.\n\n\nExploratory Visualizations\n\n\nCode\n# Scatterplot of Population Density vs. Happiness Score\nggplot(merged_sf, aes(x = pop_density, y = `Life Ladder`)) +\n  geom_point(alpha = 0.6) +\n  geom_smooth(method = \"lm\", color = \"red\", se = TRUE) +\n  theme_minimal() +\n  labs(\n    title = \"Relationship Between Population Density and Happiness\",\n    x = \"Population Density (People per Sq Km)\",\n    y = \"Happiness Score\"\n  )\n\n\n\n\n\n\n\nCode\n# Compute Moran's I for Population Density\npop_density_nb &lt;- spdep::poly2nb(merged_sf, queen = TRUE)\n\n# Allow empty neighbor sets\npop_density_listw &lt;- spdep::nb2listw(pop_density_nb, style = \"W\", zero.policy = TRUE)\n\n# Compute Moran's I for Population Density\npop_density_moran &lt;- spdep::moran.test(merged_sf$pop_density, pop_density_listw, zero.policy = TRUE)\n\n# Print the Moran's I result\nprint(pop_density_moran)\n\n\n\n    Moran I test under randomisation\n\ndata:  merged_sf$pop_density  \nweights: pop_density_listw  \nn reduced by no-neighbour observations  \n\nMoran I statistic standard deviate = 172.83, p-value &lt; 2.2e-16\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n     9.846116e-01     -6.031363e-04      3.249597e-05 \n\n\n\n\nClustering Analysis\nK-Means clustering grouped countries based on happiness scores and population density into three clusters:\nCluster 1: Countries with low happiness and low-to-moderate population density. Cluster 2: Countries with moderate happiness but low population density, representing unique regional trends. Cluster 3: Countries with high happiness and varying population densities.\n\n\nCode\nmerged_sf &lt;- merged_sf %&gt;%\n  mutate(`Life Ladder` = as.numeric(`Life Ladder`))\n\n\n\n\nCode\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(cluster)\nlibrary(ggplot2)\n\n# Select numeric columns only, excluding geometry\ncluster_data &lt;- merged_sf %&gt;%\n  st_drop_geometry() %&gt;%  # Drop the geometry column\n  select(pop_density, `Life Ladder`) %&gt;%\n  drop_na()  # Remove rows with missing values\n\n# Scale the numeric data\ncluster_data_scaled &lt;- scale(cluster_data)\n\n\n\n\nCode\n# Determine the optimal number of clusters using the Elbow method\nset.seed(123)  # For reproducibility\nwss &lt;- map_dbl(1:10, function(k) {\n  kmeans(cluster_data_scaled, centers = k, nstart = 25)$tot.withinss\n})\n\n# Plot the Elbow method\nplot(1:10, wss, type = \"b\", pch = 19, frame = FALSE,\n     xlab = \"Number of Clusters (k)\",\n     ylab = \"Total Within-Cluster Sum of Squares\")\n\n\n\n\n\nCode\n# Perform k-means clustering with the optimal number of clusters\noptimal_k &lt;- 3  # Replace with the optimal number from the Elbow plot\nkmeans_result &lt;- kmeans(cluster_data_scaled, centers = optimal_k, nstart = 25)\n\n# Add cluster assignments to the original dataset\nmerged_sf$cluster &lt;- as.factor(kmeans_result$cluster)\n\n\n\n\nCode\n# Scatterplot\nggplot(merged_sf, aes(x = pop_density, y = `Life Ladder`, color = cluster)) +\n  geom_point() +\n  theme_minimal() +\n  labs(title = \"Clustering Population Density and Happiness Scores\",\n       x = \"Population Density\",\n       y = \"Happiness Score\",\n       color = \"Cluster\")\n\n\n\n\n\n\n\nCode\nlibrary(sf)\n\n# Spatial Map\nggplot(merged_sf) +\n  geom_sf(aes(fill = cluster)) +\n  theme_minimal() +\n  labs(title = \"Clustering Results on Map\",\n       fill = \"Cluster\")\n\n\n\n\n\nWhile low-density countries had the highest average happiness, very high-density regions also exhibited high scores, challenging the assumption that density negatively impacts well-being. Medium-density regions had the lowest happiness, possibly reflecting economic or governance challenges in countries transitioning between rural and urban characteristics.v"
  },
  {
    "objectID": "country_level3.html",
    "href": "country_level3.html",
    "title": "Analysis of Global Delivery Quality",
    "section": "",
    "text": "As we saw from the EDA, the delivery quality was a signifant factor that determined the happiness score. I thought this was an interesting finding and wanted to analyze if this factor is related to the geographical factor.\n\n\nCode\n# Load libraries\nlibrary(tidyverse)\nlibrary(sf)\nlibrary(spdep)\nlibrary(viridis)\nlibrary(readxl)\nlibrary(rnaturalearth)\nlibrary(rnaturalearthdata)\nlibrary(corrplot)\n\n\n\n\nCode\n# Load spatial and happiness datasets\nworld_sf &lt;- rnaturalearth::ne_countries(scale = \"medium\", returnclass = \"sf\")\nhappiness_data &lt;- read_excel(\"../data/WHR20_DataForTable2.1.xls\")\n\n\n\n\nCode\n# Select relevant columns\nhappiness_data &lt;- happiness_data %&gt;%\n  select(\n    `year`, `Country name`, `Life Ladder`, `Log GDP per capita`, `Delivery Quality`\n  )\n\n\n\n\nCode\n# Ensure the Life Ladder column is numeric\nhappiness_data &lt;- happiness_data %&gt;%\n  mutate(`Life Ladder` = as.numeric(`Life Ladder`))\n\n\n\n\nCode\n# Merge spatial and happiness data\nmerged_sf &lt;- left_join(world_sf, happiness_data, by = c(\"name\" = \"Country name\"))\nmerged_sf &lt;- merged_sf[!is.na(merged_sf$`Life Ladder`), ] # Remove rows with missing happiness scores\n\n\n\n\nCode\nmerged_sf &lt;- st_transform(merged_sf, crs = 3857)\n\n\n\n\nCode\nsummary(merged_sf$`Delivery Quality`)\n\n\n    Min.  1st Qu.   Median     Mean  3rd Qu.     Max.     NA's \n-2.14497 -0.71260 -0.20727 -0.00128  0.67290  2.18472      127 \n\n\nThe analysis began by integrating the Delivery Quality variable from the World Happiness Report with global spatial data. After filtering out rows with missing values, the dataset covered countries with valid Delivery Quality scores, ranging from -2.14 (low) to 2.18 (high). The mean score was close to zero, indicating a balanced distribution around the global average. This variable highlights significant disparities between countries, reflecting differences in governance and institutional efficiency.\n\nSpatial Autocorrelation\n\n\nCode\n# Filter out rows with missing values\nmerged_sf_clean &lt;- merged_sf[!is.na(merged_sf$`Delivery Quality`), ]\n\n# Compute Moran's I for Delivery Quality\ndelivery_quality_nb &lt;- spdep::poly2nb(merged_sf_clean, queen = TRUE)\n\n# Allow empty neighbor sets\ndelivery_quality_listw &lt;- spdep::nb2listw(delivery_quality_nb, style = \"W\", zero.policy = TRUE)\n\n# Compute Moran's I for the numeric version of Delivery Quality\ndelivery_quality_moran &lt;- spdep::moran.test(merged_sf_clean$`Delivery Quality`, delivery_quality_listw, zero.policy = TRUE)\n\n# Print the Moran's I result\nprint(delivery_quality_moran)\n\n\n\n    Moran I test under randomisation\n\ndata:  merged_sf_clean$`Delivery Quality`  \nweights: delivery_quality_listw  \nn reduced by no-neighbour observations  \n\nMoran I statistic standard deviate = 117.76, p-value &lt; 2.2e-16\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n     0.7382296175     -0.0006369427      0.0000393707 \n\n\nThe Moran’s I test was applied to evaluate the spatial autocorrelation of Delivery Quality. The result (Moran’s I = 0.738, p-value &lt; 2.2e-16) indicates a strong and statistically significant clustering of delivery quality scores. This means that countries with similar scores—whether high or low—are geographically proximate, suggesting that regional factors such as shared economic conditions or governance practices play a role in delivery quality.\n\n\nExploratory Visualizations\n\n\nCode\nggplot(merged_sf_clean) +\n  geom_sf(aes(fill = `Delivery Quality`), color = \"white\") +\n  scale_fill_viridis_c(option = \"C\", na.value = \"gray\") +\n  theme_minimal() +\n  labs(title = \"Global Delivery Quality Scores\", fill = \"Delivery Quality\")\n\n\n\n\n\n\n\nCode\nlocal_moran &lt;- spdep::localmoran(merged_sf_clean$`Delivery Quality`, delivery_quality_listw)\nmerged_sf_clean$Ii &lt;- local_moran[, \"Ii\"]\nmerged_sf_clean$p_value &lt;- local_moran[, \"Pr(z != E(Ii))\"]\n\nggplot(merged_sf_clean) +\n  geom_sf(aes(fill = Ii), color = \"black\") +\n  scale_fill_gradient2(low = \"blue\", mid = \"white\", high = \"red\", midpoint = 0) +\n  theme_minimal() +\n  labs(title = \"Local Moran's I for Delivery Quality\", fill = \"Local Moran's I\")"
  },
  {
    "objectID": "country_level1.html",
    "href": "country_level1.html",
    "title": "General Analysis of Global Happiness Scores",
    "section": "",
    "text": "I first wanted to look at the general analysis of the data and see if the happiness scores displayed similar levels in neighboring countries."
  },
  {
    "objectID": "country_level1.html#hotspot-analysis-and-regional-trends",
    "href": "country_level1.html#hotspot-analysis-and-regional-trends",
    "title": "General Analysis of Global Happiness Scores",
    "section": "Hotspot Analysis and Regional Trends",
    "text": "Hotspot Analysis and Regional Trends\n\n\nCode\n# Compute Getis-Ord Gi* and convert to numeric\nmerged_sf$Gi_star &lt;- as.numeric(spdep::localG(merged_sf$`Life Ladder`, listw_knn))\n\n# Plot hotspots and coldspots\nggplot(merged_sf) +\n  geom_sf(aes(fill = Gi_star), color = \"black\") +\n  scale_fill_gradient2(low = \"blue\", mid = \"white\", high = \"red\", midpoint = 0) +\n  theme_minimal() +\n  labs(\n    title = \"Getis-Ord Gi* for Happiness Scores\",\n    fill = \"Gi* Value\"\n  )\n\n\n\n\n\nThe Getis-Ord Gi* statistic was applied to detect spatial hotspots and coldspots of happiness scores. High-value hotspots often corresponded to regions with robust economic performance and social cohesion, such as Scandinavia and parts of North America. In contrast, coldspots aligned with areas grappling with instability or poverty. An overlay map combined happiness scores with clusters identified through Moran’s I, confirming the findings."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "GIS Final Project",
    "section": "",
    "text": "Introduction\nThis project undertakes a comprehensive exploration of global and state-level happiness by integrating geospatial and statistical analyses to identify key factors influencing happiness scores. The primary aim is to assess how geographic, demographic, and infrastructural variables contribute to variations in happiness across countries and U.S. states. By employing advanced spatial data visualization and modeling techniques, the study investigates correlations between happiness levels and spatial predictors, offering valuable insights into the geographical dimensions of well-being.\nAt the global level, the analysis focuses on:\n\nPopulation density and happiness patterns: Examining how urbanization and population distribution relate to happiness scores.\nDelivery infrastructure and quality: Assessing the impact of logistical networks on national well-being.\nGeographic determinants of happiness: Identifying trends associated with regional differences in topographical features and proximity to resources.\n\nAt the U.S. state level, the project explores:\n\nPopulation density and rural-urban disparities: Analyzing whether densely populated or rural regions report higher levels of happiness.\nClimate zones and coastal access: Evaluating the relationship between environmental factors, such as climate and proximity to coasts, and happiness.\nSpatial predictors of happiness: Incorporating spatial modeling to uncover less apparent influences on well-being.\n\nThis project bridges the domains of geography, social sciences, and public policy. By analyzing large-scale datasets with exploratory data analysis (EDA) and inferential methods, it aims to provide actionable insights for policymakers, urban planners, and social researchers."
  },
  {
    "objectID": "state_level4.html",
    "href": "state_level4.html",
    "title": "State-Level Happiness Analysis with Spatial Predictors",
    "section": "",
    "text": "For this section, I wanted to see some other factors that might influence the happiness scores, including fiscal, educational, and geographic factors. As school resources, teacher and students’ relationship, and education itself are allocation important variable in developing students’ self esteem, I thought using education as a factor would be an interesting analysis. I used the fiscal data demonstrating states expenditures and the NAEP scores for 4th graders in the year 2022. By combining happiness scores with external datasets, the study investigates patterns in well-being and relationships with neighboring states.\n\n\nCode\n# Load libraries\nlibrary(tidyverse)\nlibrary(sf)\nlibrary(spdep)\nlibrary(viridis)\nlibrary(readxl)\nlibrary(rnaturalearth)\nlibrary(rnaturalearthdata)\nlibrary(corrplot)\nlibrary(readxl)\n\n\n\n\nCode\n# Load spatial and happiness datasets\nus_states &lt;- ne_states(country = \"United States of America\", returnclass = \"sf\")\nhappiness_state &lt;- read_csv(\"../data/happiest_state_2022.csv\", show_col_types = FALSE)\n\n# Merge spatial and happiness data\nmerged_sf &lt;- left_join(us_states, happiness_state, by = c(\"name\" = \"State\"))\nmerged_sf &lt;- merged_sf[!is.na(merged_sf$`Total Score`), ] # Remove rows with missing happiness scores\n\n\nfiscal &lt;- read_xlsx(\"../data/fiscal_predictors.xlsx\")\noutcomes &lt;- read_xlsx(\"../data/outcome_data.xlsx\")\ndat2022 &lt;- outcomes %&gt;% filter(year == 2022)\nperformance_dat &lt;- left_join(dat2022, fiscal, by = c('jurisdiction' = 'STABR', 'year' = 'TargetYear'))\n\nmerged_sf &lt;- left_join(merged_sf, performance_dat, by = c(\"name\" = \"jurisLabel\"))\nmerged_sf &lt;- st_transform(merged_sf, crs = 3857)\n\n\n\nVisualizations\n\n\nCode\nlibrary(tmap)\n\ntm_shape(merged_sf) +\n  tm_polygons(\"Total Score\", palette = \"Blues\", title = \"Happiness Score\") +\n  tm_layout(title = \"State Happiness Scores\")\n\n\n\n\n\nThis thematic map illustrates variations in happiness across states. Higher scores are concentrated in states like Hawaii, Maryland, and New Jersey, while lower scores are found in Louisiana and Arkansas.\n\n\nSpatial Autocorrelation\n\n\nCode\nlibrary(spdep)\n\n# Spatial neighbors and weights\nneighbors &lt;- poly2nb(merged_sf, queen = TRUE)\nweights &lt;- nb2listw(neighbors, style = \"W\", zero.policy = TRUE)\n\n# Moran's I\nmorans &lt;- moran.test(merged_sf$`Total Score`, weights, zero.policy = TRUE)\nprint(morans)\n\n\n\n    Moran I test under randomisation\n\ndata:  merged_sf$`Total Score`  \nweights: weights  \nn reduced by no-neighbour observations  \n\nMoran I statistic standard deviate = 3.0626, p-value = 0.001097\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n      0.280211570      -0.021276596       0.009691088 \n\n\nMoran’s I was used to test for spatial autocorrelation in happiness scores. The global Moran’s I is 0.280 with a p-value of 0.001. This indicates significant clustering of happiness scores, with geographically close states tending to share similar levels of happiness.\n\n\nPredictors and Bivariate Relationships\n\n\nCode\n# Spatial lag of happiness scores\nlagged_happiness &lt;- lag.listw(weights, merged_sf$`Total Score`)\n\n# Moran's I for math scores against lagged happiness scores\nmorans_bivariate &lt;- lm.morantest(lm(math ~ lagged_happiness, data = merged_sf), weights)\nprint(morans_bivariate)\n\n\n\n    Global Moran I for regression residuals\n\ndata:  \nmodel: lm(formula = math ~ lagged_happiness, data = merged_sf)\nweights: weights\n\nMoran I statistic standard deviate = 1.1903, p-value = 0.117\nalternative hypothesis: greater\nsample estimates:\nObserved Moran I      Expectation         Variance \n     0.094172376     -0.023891864      0.009838047 \n\n\n\n\nCode\nlibrary(ggplot2)\n\n# Scatterplot\nggplot(data = merged_sf, aes(x = math, y = lagged_happiness)) +\n  geom_point() +\n  geom_smooth(method = \"lm\", se = FALSE, color = \"blue\") +\n  labs(x = \"Math Scores\", y = \"Lagged Happiness Scores\", title = \"Moran Scatterplot: Math vs Happiness\")\n\n\n\n\n\n\n\nCode\n# Local Moran's I for math scores\nlocal_morans_math &lt;- localmoran(merged_sf$math, weights)\n\n# Add LISA results for math to the spatial dataset\nmerged_sf$lisa_math &lt;- local_morans_math[, \"Ii\"]\n\n# Map clusters for math scores\ntm_shape(merged_sf) +\n  tm_polygons(\"lisa_math\", palette = \"RdBu\", title = \"LISA Clusters for Math\") +\n  tm_layout(title = \"Local Spatial Autocorrelation (Math Scores)\")\n\n\n\n\n\n\n\nCode\n# Spatial lag of happiness scores\nlagged_happiness &lt;- lag.listw(weights, merged_sf$`Total Score`)\n\n# Moran's I for reading scores against lagged happiness scores\nmorans_bivariate &lt;- lm.morantest(lm(reading ~ lagged_happiness, data = merged_sf), weights)\nprint(morans_bivariate)\n\n\n\n    Global Moran I for regression residuals\n\ndata:  \nmodel: lm(formula = reading ~ lagged_happiness, data = merged_sf)\nweights: weights\n\nMoran I statistic standard deviate = 0.69608, p-value = 0.2432\nalternative hypothesis: greater\nsample estimates:\nObserved Moran I      Expectation         Variance \n     0.045149968     -0.023891864      0.009838047 \n\n\n\n\nCode\nlibrary(ggplot2)\n\n# Scatterplot\nggplot(data = merged_sf, aes(x = reading, y = lagged_happiness)) +\n  geom_point() +\n  geom_smooth(method = \"lm\", se = FALSE, color = \"blue\") +\n  labs(x = \"Reading Scores\", y = \"Lagged Happiness Scores\", title = \"Moran Scatterplot: Reading vs Happiness\")\n\n\n\n\n\n\n\nCode\n# Local Moran's I for reading scores\nlocal_morans_reading &lt;- localmoran(merged_sf$reading, weights)\n\n# Add LISA results for reading to the spatial dataset\nmerged_sf$lisa_reading &lt;- local_morans_reading[, \"Ii\"]\n\n# Map clusters for reading scores\ntm_shape(merged_sf) +\n  tm_polygons(\"lisa_reading\", palette = \"RdBu\", title = \"LISA Clusters for Reading\") +\n  tm_layout(title = \"Local Spatial Autocorrelation (Reading Scores)\")\n\n\n\n\n\n\n\nCode\n# Spatial lag of happiness scores\nlagged_happiness &lt;- lag.listw(weights, merged_sf$`Total Score`)\n\n# Moran's I for expenditure on education against lagged happiness scores\nmorans_bivariate &lt;- lm.morantest(lm(TE11 ~ lagged_happiness, data = merged_sf), weights)\nprint(morans_bivariate)\n\n\n\n    Global Moran I for regression residuals\n\ndata:  \nmodel: lm(formula = TE11 ~ lagged_happiness, data = merged_sf)\nweights: weights\n\nMoran I statistic standard deviate = 0.32475, p-value = 0.3727\nalternative hypothesis: greater\nsample estimates:\nObserved Moran I      Expectation         Variance \n     0.008319333     -0.023891864      0.009838047 \n\n\n\n\nCode\nlibrary(ggplot2)\n\n# Scatterplot\nggplot(data = merged_sf, aes(x = TE11, y = lagged_happiness)) +\n  geom_point() +\n  geom_smooth(method = \"lm\", se = FALSE, color = \"blue\") +\n  labs(x = \"Total Expenditure on Education\", y = \"Lagged Happiness Scores\", title = \"Moran Scatterplot: Total Expenditure on Education vs Happiness\")\n\n\n\n\n\n\n\nCode\n# Local Moran's I for expenditure on education\nlocal_morans_total_exp &lt;- localmoran(merged_sf$TE11, weights)\n\n# Add LISA results for math to the spatial dataset\nmerged_sf$lisa_total_exp &lt;- local_morans_total_exp[, \"Ii\"]\n\n# Map clusters for total expenditure on education\ntm_shape(merged_sf) +\n  tm_polygons(\"lisa_total_exp\", palette = \"RdBu\", title = \"LISA Clusters for Total Expenditure on Education\") +\n  tm_layout(title = \"Local Spatial Autocorrelation (Total Expenditure on Education)\")\n\n\n\n\n\n\n\nCode\n# Spatial lag of happiness scores\nlagged_happiness &lt;- lag.listw(weights, merged_sf$`Total Score`)\n\n# Moran's I for Local Revenues Student Activities against lagged happiness scores\nmorans_bivariate &lt;- lm.morantest(lm(R1K ~ lagged_happiness, data = merged_sf), weights)\nprint(morans_bivariate)\n\n\n\n    Global Moran I for regression residuals\n\ndata:  \nmodel: lm(formula = R1K ~ lagged_happiness, data = merged_sf)\nweights: weights\n\nMoran I statistic standard deviate = 3.0568, p-value = 0.001119\nalternative hypothesis: greater\nsample estimates:\nObserved Moran I      Expectation         Variance \n     0.279303296     -0.023891864      0.009838047 \n\n\n\n\nCode\nlibrary(ggplot2)\n\n# Scatterplot\nggplot(data = merged_sf, aes(x = R1K, y = lagged_happiness)) +\n  geom_point() +\n  geom_smooth(method = \"lm\", se = FALSE, color = \"blue\") +\n  labs(x = \"Local Revenues Student Activities\", y = \"Lagged Happiness Scores\", title = \"Moran Scatterplot: Revenues Student Activities vs Happiness\")\n\n\n\n\n\n\n\nCode\n# Local Moran's I for Local Revenues Student Activitiese scores\nlocal_morans_reading &lt;- localmoran(merged_sf$R1K, weights)\n\n# Add LISA results for Local Revenues Student Activitiese to the spatial dataset\nmerged_sf$lisa_reading &lt;- local_morans_reading[, \"Ii\"]\n\n# Map clusters for Local Revenues Student Activitiese scores\ntm_shape(merged_sf) +\n  tm_polygons(\"lisa_reading\", palette = \"RdBu\", title = \"LISA Clusters for Local Revenues Student Activitiese\") +\n  tm_layout(title = \"Local Spatial Autocorrelation (Local Revenues Student Activitieses)\")\n\n\n\n\n\n\n\nCode\n# Spatial lag of happiness scores\nlagged_happiness &lt;- lag.listw(weights, merged_sf$`Total Score`)\n\n# Moran's I for math scores against lagged happiness scores\nmorans_bivariate &lt;- lm.morantest(lm(E12 ~ lagged_happiness, data = merged_sf), weights)\nprint(morans_bivariate)\n\n\n\n    Global Moran I for regression residuals\n\ndata:  \nmodel: lm(formula = E12 ~ lagged_happiness, data = merged_sf)\nweights: weights\n\nMoran I statistic standard deviate = 1.3132, p-value = 0.09455\nalternative hypothesis: greater\nsample estimates:\nObserved Moran I      Expectation         Variance \n     0.106364194     -0.023891864      0.009838047 \n\n\n\n\nCode\nlibrary(ggplot2)\n\n# Scatterplot\nggplot(data = merged_sf, aes(x = E12, y = lagged_happiness)) +\n  geom_point() +\n  geom_smooth(method = \"lm\", se = FALSE, color = \"blue\") +\n  labs(x = \"Math Scores\", y = \"Lagged Happiness Scores\", title = \"Moran Scatterplot: Math vs Happiness\")\n\n\n\n\n\n\n\nCode\n# Local Moran's I for happiness scores\nlocal_morans &lt;- localmoran(merged_sf$E12, weights)\n\n# Add LISA results to the spatial dataset\nmerged_sf$lisa &lt;- local_morans[, \"Ii\"]\n\n# Map clusters\nlibrary(tmap)\ntm_shape(merged_sf) +\n  tm_polygons(\"lisa\", palette = \"RdBu\", title = \"LISA Clusters for Expenditures on Employee Benefits\") +\n  tm_layout(title = \"Local Spatial Autocorrelation (Expenditures on Employee Benefits)\")\n\n\n\n\n\n\n\nCode\nlibrary(sf)\nlibrary(tmap)\nlibrary(dplyr)\n\n# Ensure merged_sf is projected in a suitable CRS (e.g., EPSG:3857 for meter units)\nmerged_sf &lt;- st_transform(merged_sf, crs = 3857)\n\n# Create a 50 km buffer around state borders\nstate_buffers &lt;- st_buffer(merged_sf, dist = 1000)\n\n# Visualize the states and their buffers\ntm_shape(merged_sf) +\n  tm_polygons(\"Total Score\", palette = \"Blues\", title = \"Happiness Scores\") +\n  tm_shape(state_buffers) +\n  tm_borders(col = \"red\") +\n  tm_layout(title = \"50 km Buffers Around States\")\n\n\n\n\n\nCode\n# Find intersections (neighbors within the buffer)\nneighbors_in_buffer &lt;- st_intersects(state_buffers, merged_sf)\n\n# Add neighbor happiness scores to each state's data\nmerged_sf &lt;- merged_sf %&gt;%\n  mutate(\n    neighbor_happiness_mean = sapply(neighbors_in_buffer, function(neighbors) {\n      if (length(neighbors) &gt; 1) {\n        mean(merged_sf$`Total Score`[neighbors], na.rm = TRUE)\n      } else {\n        NA\n      }\n    })\n  )\n\n# Compare happiness scores\ncomparison &lt;- merged_sf %&gt;%\n  st_drop_geometry() %&gt;%\n  select(name, `Total Score`, neighbor_happiness_mean) %&gt;%\n  arrange(desc(`Total Score`))\n\n# Display the comparison table\nprint(comparison)\n\n\n             name Total Score neighbor_happiness_mean\n1          Hawaii       68.71                      NA\n2        Maryland       64.67                54.33200\n3      New Jersey       62.46                56.03333\n4            Utah       62.20                50.46143\n5       Minnesota       60.43                55.37000\n6        Delaware       60.43                59.42667\n7     Connecticut       60.14                55.40250\n8           Idaho       58.84                51.16714\n9        Nebraska       58.60                52.33286\n10  Massachusetts       58.24                54.57333\n11 South Carolina       57.68                54.62000\n12   South Dakota       57.62                53.91571\n13     California       55.63                49.64750\n14  New Hampshire       55.38                53.90750\n15        Florida       55.38                50.29667\n16       Virginia       55.29                48.93167\n17       Illinois       54.39                49.82333\n18         Kansas       54.23                49.83200\n19           Iowa       54.22                55.25571\n20        Georgia       53.84                50.20500\n21      Wisconsin       53.23                54.38600\n22   Pennsylvania       53.18                53.54857\n23       New York       52.46                56.15500\n24 North Carolina       52.34                51.89400\n25        Arizona       52.13                50.49167\n26          Maine       51.56                53.47000\n27   North Dakota       51.35                54.38000\n28     Washington       51.11                51.63333\n29   Rhode Island       50.77                56.38333\n30        Vermont       50.45                54.13250\n31       Michigan       49.66                48.09000\n32       Missouri       48.30                47.97444\n33        Montana       48.12                52.60000\n34        Wyoming       47.07                54.10571\n35       Colorado       46.29                50.38500\n36        Indiana       45.92                47.28000\n37         Nevada       45.88                53.27167\n38          Texas       45.56                39.63600\n39         Oregon       44.95                51.28200\n40           Ohio       43.55                45.54667\n41       Kentucky       42.88                46.09250\n42    Mississippi       41.83                38.77600\n43       Oklahoma       41.74                44.86143\n44        Alabama       41.67                46.60800\n45         Alaska       41.44                      NA\n46     New Mexico       40.82                48.12333\n47      Tennessee       40.32                45.95111\n48  West Virginia       38.09                49.61000\n49       Arkansas       37.09                41.11571\n50      Louisiana       32.97                39.36250\n\n\nCode\n# Visualize neighbors' average happiness scores\ntm_shape(merged_sf) +\n  tm_polygons(\"neighbor_happiness_mean\", palette = \"-RdYlBu\", title = \"Neighbor Happiness Mean\") +\n  tm_layout(title = \"Average Happiness of Neighboring States Within 1 km\")\n\n\n\n\n\nMath and Reading Scores:\nMoran’s I tests and scatterplots were used to examine the relationship between educational performance (e.g., math and reading scores) and happiness. Results for math and reading showed no significant spatial clustering in their relationship with happiness (p &gt; 0.05).\nFiscal Predictors:\nRelationships between happiness scores and expenditures (e.g., total educational spending and local revenues) were tested. Local revenues for student activities showed significant spatial clustering (Moran’s I = 0.279, p &lt; 0.001). Other fiscal predictors (e.g., expenditures on employee benefits) exhibited no significant spatial patterns.\nBuffer Analysis:\nStates with higher happiness scores tended to have neighbors with above-average happiness. For example, Hawaii scored highest but lacked direct neighbors, while Maryland and New Jersey showed high scores alongside supportive neighbors."
  },
  {
    "objectID": "state_level3.html",
    "href": "state_level3.html",
    "title": "Climate Zones and Happiness in the United States",
    "section": "",
    "text": "As we analyzed in the ‘Country’ section, I wanted to see the relationship between climate zones and state-level happiness scores in the United States. By categorizing states into climate zones based on latitude, the analysis explores patterns in happiness distribution and the impact of geography on well-being.\n\n\nCode\n# Load libraries\nlibrary(tidyverse)\nlibrary(sf)\nlibrary(spdep)\nlibrary(viridis)\nlibrary(readxl)\nlibrary(rnaturalearth)\nlibrary(rnaturalearthdata)\nlibrary(corrplot)\n\n\n\n\nCode\n# Load spatial and happiness datasets\nus_states &lt;- ne_states(country = \"United States of America\", returnclass = \"sf\")\nhappiness_state &lt;- read_csv(\"../data/happiest-states-2024.csv\", show_col_types = FALSE)\n\n\n\n\nCode\n# Merge spatial and happiness data\nmerged_sf &lt;- left_join(us_states, happiness_state, by = c(\"name\" = \"state\"))\nmerged_sf &lt;- merged_sf[!is.na(merged_sf$`HappiestStatesTotalHappinessScore`), ] # Remove rows with missing happiness scores\n\n\n\n\nCode\nmerged_sf &lt;- st_transform(merged_sf, crs = 3857)\n\n\n\n\nCode\n# Categorize countries into climate zones\nmerged_sf$climate_zone &lt;- case_when(\n  merged_sf$latitude &gt;= -23.5 & merged_sf$latitude &lt;= 23.5 ~ \"Tropical\",\n  merged_sf$latitude &gt; 23.5 & merged_sf$latitude &lt;= 40 ~ \"Sub Tropical\",\n  merged_sf$latitude &lt; -23.5 & merged_sf$latitude &gt;= -40 ~ \"Sub Tropical\",\n  merged_sf$latitude &gt; 40 & merged_sf$latitude &lt;= 60 ~ \"Temperate\",\n  merged_sf$latitude &lt; -40 & merged_sf$latitude &gt;= -60 ~ \"Temperate\",\n  merged_sf$latitude &gt; 60 | merged_sf$latitude &lt; -60 ~ \"Polar\",\n  TRUE ~ NA_character_ # Assign NA if no condition matches\n)\n\n\n# Compute average happiness by climate zone\nclimate_stats &lt;- merged_sf %&gt;%\n  group_by(climate_zone) %&gt;%\n  summarize(avg_happiness = mean(`HappiestStatesTotalHappinessScore`, na.rm = TRUE))\n\nprint(climate_stats)\n\n\nSimple feature collection with 4 features and 2 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -19942160 ymin: 2143886 xmax: 20013120 ymax: 11544810\nProjected CRS: WGS 84 / Pseudo-Mercator\n# A tibble: 4 × 3\n  climate_zone avg_happiness                                            geometry\n  &lt;chr&gt;                &lt;dbl&gt;                                  &lt;MULTIPOLYGON [m]&gt;\n1 Polar                 46.3 (((-15696668 10956047, -15696657 10909537, -156966…\n2 Sub Tropical          48.5 (((-10817954 3013930, -10818954 3017589, -10821704…\n3 Temperate             54.6 (((-10090220 5232504, -10086825 5230602, -10085119…\n4 Tropical              66.3 (((-17243347 2221808, -17237447 2219200, -17235075…\n\n\nStates are categorized into the following climate zones based on their latitude:\nTropical: Latitudes between -23.5° and 23.5°. Subtropical: Latitudes between 23.5° and 40° (north and south). Temperate: Latitudes between 40° and 60° (north and south). Polar: Latitudes above 60° or below -60°.\nThe summary statistics suggest that tropical regions exhibit the highest happiness scores, potentially influenced by favorable environmental conditions or cultural factors. Conversely, polar regions show the lowest scores, likely due to harsher climates and limited population density.\n\nExploratory Visualizations\n\n\nCode\n# Visualize happiness scores by climate zone\nggplot(merged_sf) +\n  geom_sf(aes(fill = `HappiestStatesTotalHappinessScore`), color = \"white\") +\n  facet_wrap(~climate_zone) +\n  scale_fill_viridis_c(option = \"C\") +\n  theme_minimal() +\n  labs(title = \"Happiness Scores by Climate Zone\", fill = \"Happiness Score\")\n\n\n\n\n\nThis choropleth confirms that tropical zone’s high scores are particularly notable compared to the more moderate happiness levels in temperate and subtropical zones.\nA summary of happiness scores grouped by latitude ranges shows clear trends, with northern latitudes (temperate zones) exhibiting higher happiness than southern or polar regions.\n\n\nSpatial Autocorrelation Analysis\n\n\nCode\n# Subset tropical, sub tropical, temperate, and polar countries\ntropical_countries &lt;- merged_sf[merged_sf$climate_zone == \"Tropical\", ]\nsubtropical_countries &lt;- merged_sf[merged_sf$climate_zone == \"Sub Tropical\", ]\ntemperate_countries &lt;- merged_sf[merged_sf$climate_zone == \"Temperate\", ]\npolar_countries &lt;- merged_sf[merged_sf$climate_zone == \"Polar\", ]\n\n\n\n\nCode\n# Calculate centroids for subtropical countries\nsubtropical_coords &lt;- st_coordinates(st_centroid(subtropical_countries))\n\n# Create spatial weights using k-nearest neighbors\nsubtropical_knn &lt;- spdep::knearneigh(subtropical_coords, k = 5)\nsubtropical_listw &lt;- spdep::nb2listw(spdep::knn2nb(subtropical_knn), style = \"W\")\n\n# Moran's I for subtropical countries\nsubtropical_moran &lt;- spdep::moran.test(subtropical_countries$HappiestStatesTotalHappinessScore, subtropical_listw)\nprint(subtropical_moran)\n\n\n\n    Moran I test under randomisation\n\ndata:  subtropical_countries$HappiestStatesTotalHappinessScore  \nweights: subtropical_listw    \n\nMoran I statistic standard deviate = 2.5733, p-value = 0.005036\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n       0.23328472       -0.04000000        0.01127816 \n\n\n\n\nCode\n# Create spatial weights for temperate countries\ntemperate_coords &lt;- st_coordinates(st_centroid(temperate_countries))\ntemperate_knn &lt;- spdep::knearneigh(temperate_coords, k = 5)\ntemperate_listw &lt;- spdep::nb2listw(spdep::knn2nb(temperate_knn), style = \"W\")\n\n# Moran's I for temperate countries\ntemperate_moran &lt;- spdep::moran.test(temperate_countries$HappiestStatesTotalHappinessScore, temperate_listw)\nprint(temperate_moran)\n\n\n\n    Moran I test under randomisation\n\ndata:  temperate_countries$HappiestStatesTotalHappinessScore  \nweights: temperate_listw    \n\nMoran I statistic standard deviate = 0.78115, p-value = 0.2174\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n       0.03863463       -0.04761905        0.01219243 \n\n\n\n\nCode\n# Monte Carlo simulation for subtropical countries\nsubtropical_mc &lt;- spdep::moran.mc(subtropical_countries$HappiestStatesTotalHappinessScore, subtropical_listw, nsim = 999)\nplot(subtropical_mc, main = \"Monte Carlo for Subtropical Countries\")\n\n\n\n\n\nCode\nprint(subtropical_mc)\n\n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  subtropical_countries$HappiestStatesTotalHappinessScore \nweights: subtropical_listw  \nnumber of simulations + 1: 1000 \n\nstatistic = 0.23328, observed rank = 980, p-value = 0.02\nalternative hypothesis: greater\n\n\nCode\n# Monte Carlo simulation for temperate countries\ntemperate_mc &lt;- spdep::moran.mc(temperate_countries$HappiestStatesTotalHappinessScore, temperate_listw, nsim = 999)\nplot(temperate_mc, main = \"Monte Carlo for Temperate Countries\")\n\n\n\n\n\nCode\nprint(temperate_mc)\n\n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  temperate_countries$HappiestStatesTotalHappinessScore \nweights: temperate_listw  \nnumber of simulations + 1: 1000 \n\nstatistic = 0.038635, observed rank = 803, p-value = 0.197\nalternative hypothesis: greater\n\n\nSpatial autocorrelation was tested within each climate zone using Moran’s I and Monte Carlo simulations.\nFor the subtropical zone, we found the Moran’s I = 0.233 and a p-value = 0.005. Significant clustering of happiness scores indicates that neighboring subtropical states tend to share similar happiness levels.\nFor the temperate zone, the Moran’s I is 0.038 with the p-value 0.185. No significant clustering was detected, suggesting more variability in happiness across temperate states.\nMonte Carlo simulations confirmed the statistical significance of clustering in the subtropical zone but not in the temperate zone. This highlights regional differences in how geography influences happiness.\n\n\nFindings\n\nTropical regions exhibit the highest happiness scores, possibly due to a combination of favorable climates, outdoor recreation opportunities, and cultural factors.\nPolar regions show the lowest happiness, reflecting challenges associated with colder climates, such as isolation and limited resources.\nSubtropical states demonstrate significant spatial clustering, suggesting regional factors like economic or cultural similarities contribute to shared well-being."
  }
]